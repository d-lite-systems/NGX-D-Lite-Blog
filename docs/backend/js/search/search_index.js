var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/classes/ArticleCtrl.html",[0,0.087,1,1.614]],["body/classes/ArticleCtrl.html",[0,0.121,1,2.23,2,0.696,3,0.696,4,0.272,5,2.044,6,1.322,7,1.043,8,0.464,9,1.112,10,1.459,11,1.334,12,1.251,13,1.251,14,1.251,15,1.112,16,0.861,17,1.237,18,1.218,19,0.069,20,2.509,21,1.482,22,2.606,23,1.193,24,1.429,25,0.834,26,1.516,27,1.429,28,1.429,29,0.834,30,1.734,31,0.992,32,0.834,33,1.251,34,1.251,35,1.112,36,0.992,37,0.834,38,1.112,39,1.112,40,0.992,41,0.834,42,0.696,43,0.834,44,0.834,45,0.834,46,0.834,47,0.834,48,0.992,49,0.834,50,0.834,51,0.618,52,0.834,53,0.834,54,0.574,55,0.834,56,1.112,57,0.696,58,0.834,59,0.834,60,0.834,61,0.834,62,0.834,63,0.992,64,0.574,65,0.992,66,0.834,67,0.834,68,0.992,69,1.112,70,2.606,71,0.834,72,0.696,73,0.047,74,0.047]],["title/classes/BaseCtrl.html",[0,0.087,7,0.554]],["body/classes/BaseCtrl.html",[0,0.108,2,0.591,3,0.591,4,0.231,7,0.79,8,0.393,9,0.993,10,1.245,11,1.396,12,1.311,13,1.245,14,1.311,15,1.245,16,0.902,17,1.166,18,1.135,19,0.069,21,1.396,23,1.25,24,1.498,25,0.993,26,1.561,27,1.498,28,1.498,29,0.993,32,0.993,33,1.36,34,1.36,35,1.245,37,0.993,38,1.245,39,1.245,41,0.993,42,0.829,43,0.993,44,0.993,45,0.993,46,0.993,47,0.993,49,0.993,50,0.993,51,0.692,52,0.993,53,0.993,54,0.683,55,0.993,56,1.245,57,0.829,58,0.993,59,0.993,60,0.993,61,0.993,62,0.993,64,0.487,66,0.993,67,0.993,72,0.591,73,0.042,74,0.042,75,1.733,76,2.211,77,2.211,78,2.211,79,2.211,80,2.211,81,2.211,82,2.211,83,3.587]],["title/classes/CategoryCtrl.html",[0,0.087,84,1.614]],["body/classes/CategoryCtrl.html",[0,0.121,2,0.696,3,0.696,4,0.272,6,1.322,7,1.043,8,0.464,9,1.112,10,1.459,11,1.334,12,1.251,13,1.251,14,1.251,15,1.112,16,0.861,17,1.237,18,1.218,19,0.069,21,1.482,23,1.193,24,1.429,25,0.834,26,1.516,27,1.429,28,1.429,29,0.834,30,1.734,31,0.992,32,0.834,33,1.251,34,1.251,35,1.112,36,0.992,37,0.834,38,1.112,39,1.112,40,0.992,41,0.834,42,0.696,43,0.834,44,0.834,45,0.834,46,0.834,47,0.834,48,0.992,49,0.834,50,0.834,51,0.618,52,0.834,53,0.834,54,0.574,55,0.834,56,1.112,57,0.696,58,0.834,59,0.834,60,0.834,61,0.834,62,0.834,63,0.992,64,0.574,65,0.992,66,0.834,67,0.834,68,0.992,69,1.112,71,0.834,72,0.696,73,0.047,74,0.047,84,2.23,85,2.044,86,2.509,87,2.606,88,2.606]],["title/classes/ContactCtrl.html",[0,0.087,89,1.614]],["body/classes/ContactCtrl.html",[0,0.097,2,0.971,3,0.509,4,0.199,6,1.062,7,0.977,8,0.339,9,0.893,10,1.336,11,1.163,12,1.056,13,1.056,14,1.056,15,0.893,16,0.727,17,1.186,18,1.144,19,0.069,21,1.398,23,1.144,24,1.37,25,0.61,26,1.483,27,1.421,28,1.37,29,0.61,30,1.588,31,0.725,32,0.61,33,1.056,34,1.056,35,0.893,36,0.725,37,0.61,38,1.163,39,1.163,40,0.725,41,0.61,42,0.745,43,0.61,44,0.61,45,0.61,46,0.61,47,0.61,48,0.725,49,1.056,50,1.056,51,0.719,52,1.056,53,1.056,54,0.727,55,1.056,56,1.293,57,0.882,58,1.056,59,1.056,60,1.336,61,1.056,62,1.056,63,0.725,64,0.42,65,0.725,66,0.61,67,0.61,68,0.725,69,1.238,71,0.61,72,0.509,73,0.037,74,0.037,89,1.791,90,1.223,91,3.633,92,2.119,93,1.905,94,3.273,95,2.588,96,2.79,97,2.79,98,2.188,99,2.79,100,2.79,101,2.333,102,2.79,103,2.79,104,2.188,105,2.188,106,2.79,107,2.79,108,2.79,109,2.79,110,2.79,111,2.79,112,2.79,113,2.79,114,2.79,115,2.79,116,2.79,117,2.119,118,1.769,119,2.79,120,1.791,121,2.79,122,1.905,123,1.791,124,2.188,125,2.588,126,1.905,127,1.905,128,1.494,129,2.188,130,1.791,131,1.494,132,1.021,133,1.494,134,1.494,135,1.494,136,1.494,137,1.494,138,1.223,139,1.494,140,1.494,141,1.021,142,1.494,143,1.494,144,1.494,145,1.494,146,2.188,147,1.494,148,1.021,149,1.494,150,1.494,151,1.494,152,1.494,153,1.494,154,2.188,155,1.494,156,1.494,157,1.494,158,1.494,159,1.494]],["title/classes/MediaCtrl.html",[0,0.087,160,1.614]],["body/classes/MediaCtrl.html",[0,0.099,2,0.522,3,0.522,4,0.204,6,1.081,7,0.983,8,0.347,9,0.909,10,1.346,11,1.176,12,1.071,13,1.071,14,1.071,15,0.909,16,0.737,17,1.193,18,1.174,19,0.069,21,1.429,23,1.174,24,1.406,25,0.625,26,1.526,27,1.464,28,1.429,29,0.625,30,1.6,31,0.743,32,1.071,33,1.346,34,1.346,35,1.176,36,0.743,37,1.071,38,1.176,39,0.909,40,0.743,41,0.625,42,0.522,43,0.625,44,0.625,45,0.625,46,0.625,47,0.625,48,0.743,49,0.909,50,0.625,51,0.505,52,0.625,53,0.625,54,0.43,55,0.625,56,0.909,57,0.522,58,0.625,59,0.625,60,0.625,61,0.625,62,0.625,63,0.743,64,0.43,65,0.743,66,0.625,67,0.625,68,0.743,69,1.25,71,0.625,72,0.522,73,0.038,74,0.038,125,2.882,160,1.823,161,1.253,162,3.347,163,3.675,164,2.149,165,1.952,166,2.84,167,2.149,168,2.84,169,2.84,170,1.952,171,2.84,172,2.84,173,2.84,174,2.84,175,3.675,176,3.675,177,3.379,178,3.675,179,3.675,180,3.675,181,3.675,182,3.675,183,3.675,184,2.84,185,2.84,186,2.227,187,2.84,188,2.84,189,2.84,190,2.84,191,2.84,192,2.84,193,2.84,194,1.952,195,1.952,196,2.227,197,2.84,198,1.531,199,1.046]],["title/classes/TaskCtrl.html",[0,0.087,200,1.614]],["body/classes/TaskCtrl.html",[0,0.121,2,0.696,3,0.696,4,0.272,6,1.322,7,1.043,8,0.464,9,1.112,10,1.459,11,1.334,12,1.251,13,1.251,14,1.251,15,1.112,16,0.861,17,1.237,18,1.218,19,0.069,21,1.482,23,1.193,24,1.429,25,0.834,26,1.516,27,1.429,28,1.429,29,0.834,30,1.734,31,0.992,32,0.834,33,1.251,34,1.251,35,1.112,36,0.992,37,0.834,38,1.112,39,1.112,40,0.992,41,0.834,42,0.696,43,0.834,44,0.834,45,0.834,46,0.834,47,0.834,48,0.992,49,0.834,50,0.834,51,0.618,52,0.834,53,0.834,54,0.574,55,0.834,56,1.112,57,0.696,58,0.834,59,0.834,60,0.834,61,0.834,62,0.834,63,0.992,64,0.574,65,0.992,66,0.834,67,0.834,68,0.992,69,1.112,71,0.834,72,0.696,73,0.047,74,0.047,200,2.23,201,2.044,202,2.509,203,2.606,204,2.606]],["title/classes/UserCtrl.html",[0,0.087,205,1.614]],["body/classes/UserCtrl.html",[0,0.097,2,0.506,3,0.506,4,0.198,6,1.058,7,0.976,8,0.337,9,0.89,10,1.334,11,1.291,12,1.053,13,1.053,14,1.16,15,0.89,16,0.725,17,1.185,18,1.165,19,0.069,21,1.419,23,1.185,24,1.419,25,0.607,26,1.519,27,1.482,28,1.419,29,0.607,30,1.586,31,0.721,32,0.607,33,1.053,34,1.053,35,0.89,36,0.721,37,1.053,38,1.16,39,1.16,40,0.721,41,0.607,42,0.506,43,0.607,44,0.607,45,0.607,46,0.607,47,0.607,48,0.721,49,1.235,50,1.053,51,0.718,52,1.053,53,1.053,54,0.725,55,1.053,56,1.291,57,0.879,58,1.053,59,1.053,60,1.235,61,1.053,62,1.053,63,0.721,64,0.417,65,0.721,66,0.607,67,0.607,68,0.721,69,1.16,71,0.607,72,0.506,73,0.037,74,0.037,123,1.784,141,2.46,205,1.784,206,1.486,207,2.842,208,2.842,209,2.179,210,2.779,211,3.624,212,2.779,213,3.624,214,4.033,215,2.779,216,2.779,217,3.624,218,2.779,219,2.779,220,2.779,221,2.779,222,1.895,223,1.895,224,2.779,225,2.779,226,3.624,227,2.779,228,2.779,229,2.779,230,1.895,231,1.486,232,1.486,233,1.895]],["title/coverage.html",[234,2.659]],["body/coverage.html",[0,0.158,1,1.676,4,0.272,5,2.047,7,0.575,19,0.068,20,1.676,51,0.464,64,0.575,73,0.047,74,0.047,75,2.047,84,1.676,85,2.047,86,1.676,89,1.676,90,2.233,92,1.676,130,1.676,141,1.399,160,1.676,161,2.233,164,1.676,167,2.511,199,1.399,200,1.676,201,2.047,202,1.676,205,1.676,206,2.047,234,2.047,235,1.676,236,2.61,237,2.61,238,5.071,239,3.91,240,2.61,241,2.61,242,3.236,243,5.04,244,3.477,245,3.27,246,1.399,247,2.047,248,2.61,249,2.61,250,2.047,251,3.27,252,2.047,253,3.27,254,3.406,255,3.27,256,2.047,257,3.066,258,2.047,259,3.27,260,2.047,261,3.27,262,2.047,263,2.727,264,2.047,265,2.677,266,1.399,267,2.047,268,2.047,269,2.61,270,2.047]],["title/dependencies.html",[271,1.662,272,1.934]],["body/dependencies.html",[4,0.279,19,0.069,54,0.59,73,0.047,74,0.047,104,2.101,120,1.72,123,1.72,124,2.101,132,1.436,196,2.101,199,1.436,231,2.101,232,2.101,272,1.72,273,2.679,274,4.828,275,2.679,276,3.538,277,2.101,278,2.101,279,2.679,280,2.775,281,2.101,282,2.101,283,2.679,284,2.679,285,2.679,286,2.101,287,3.538,288,2.775,289,2.101,290,2.101,291,2.679,292,2.679,293,2.679,294,2.101,295,2.679,296,3.538,297,3.961,298,2.679,299,3.538,300,3.538,301,2.775,302,2.679,303,2.101,304,2.679,305,2.679,306,2.775,307,2.679,308,2.775,309,2.101,310,2.679,311,2.679,312,2.775,313,2.679,314,2.679,315,2.679,316,2.101,317,2.679,318,2.679,319,2.679,320,2.101,321,2.679,322,2.679,323,2.679,324,2.679,325,3.538,326,3.538,327,2.679,328,2.679,329,2.679,330,2.679,331,2.775,332,3.538,333,2.679,334,2.679,335,2.679,336,2.679,337,2.679,338,2.679,339,2.679,340,3.538,341,2.679,342,2.679,343,2.679,344,1.896,345,2.679,346,2.679,347,2.679,348,2.679,349,2.679,350,2.679,351,2.679,352,2.679,353,2.679,354,2.679,355,2.679,356,2.679,357,2.679,358,2.679,359,2.679,360,2.101,361,2.679,362,2.679,363,2.679,364,2.679,365,2.679,366,2.679,367,2.679,368,2.679,369,2.679,370,2.679,371,2.775,372,3.538,373,2.101,374,2.101,375,2.679,376,2.679,377,2.679,378,2.679,379,2.101,380,2.101,381,2.679,382,2.679,383,2.679,384,2.679,385,2.679]],["title/miscellaneous/functions.html",[266,1.614,386,1.136]],["body/miscellaneous/functions.html",[8,0.684,19,0.062,73,0.059,74,0.059,246,2.061,265,2.469,266,2.061,267,3.469,386,2.061,387,3.015,388,3.845,389,3.845,390,2.469,391,3.845]],["title/index.html",[8,0.377,392,1.662,393,1.361]],["body/index.html",[0,0.101,3,0.414,4,0.304,16,0.721,19,0.066,42,0.875,51,0.734,57,0.778,69,0.764,71,0.764,72,0.778,73,0.032,74,0.032,98,1.214,117,1.87,118,2.154,128,1.214,132,1.754,138,0.994,148,1.279,186,1.214,207,1.214,208,1.872,235,0.994,246,2.257,270,2.567,271,2.773,272,2.271,277,1.872,278,1.214,280,1.214,281,3.456,282,1.872,286,1.872,288,1.214,289,1.214,290,1.214,294,1.214,301,3.303,303,3.494,306,3.776,308,1.214,309,1.214,312,1.214,316,1.214,320,1.214,331,1.872,344,1.561,371,3.053,373,1.872,379,1.214,380,2.567,390,2.648,394,1.548,395,4.499,396,4.407,397,1.548,398,1.548,399,3.893,400,1.548,401,3.536,402,3.736,403,1.548,404,2.387,405,2.387,406,2.913,407,3.536,408,2.387,409,2.387,410,1.548,411,4.212,412,3.536,413,2.913,414,1.548,415,1.548,416,1.548,417,3.536,418,3.274,419,2.387,420,1.548,421,1.548,422,3.736,423,1.548,424,1.548,425,2.387,426,1.548,427,1.548,428,3.736,429,2.387,430,4.572,431,1.548,432,1.548,433,3.274,434,2.387,435,1.548,436,1.548,437,1.548,438,2.387,439,1.548,440,2.387,441,2.387,442,2.387,443,3.274,444,1.548,445,1.548,446,3.274,447,2.387,448,1.548,449,1.548,450,1.548,451,1.872,452,2.567,453,1.548,454,1.548,455,1.548,456,1.548,457,2.387,458,3.536,459,1.548,460,3.536,461,4.125,462,1.548,463,1.548,464,1.548,465,1.548,466,1.548,467,1.548,468,1.548,469,1.548,470,1.548,471,1.548,472,1.548,473,1.548,474,1.548,475,3.274,476,1.548,477,1.548,478,3.736,479,1.548,480,4.499,481,1.548,482,1.548,483,1.548,484,1.548,485,1.548,486,2.387,487,1.548,488,1.548,489,2.913,490,2.387,491,2.913,492,3.274,493,1.548,494,1.548,495,2.387,496,1.548,497,1.548,498,1.548,499,1.548,500,2.387,501,3.736,502,2.387,503,1.548,504,2.913,505,2.387,506,2.387,507,2.387,508,2.913,509,2.913,510,1.548,511,1.548,512,1.548,513,3.536,514,1.548,515,2.387,516,1.548,517,1.548,518,2.387,519,2.387,520,2.387,521,2.387,522,3.274,523,2.387,524,2.387,525,2.387,526,1.548,527,2.567,528,1.548,529,1.548,530,1.548,531,1.548,532,1.548,533,1.548,534,4.02,535,2.387,536,1.548,537,1.548,538,1.548,539,3.274,540,1.548,541,1.548,542,1.548,543,1.214,544,2.387,545,1.548,546,1.548,547,1.548,548,1.548,549,1.548,550,1.548,551,2.387,552,1.548,553,1.548,554,1.548,555,1.548,556,1.548,557,1.548,558,1.548,559,1.548,560,1.548,561,1.548,562,1.548,563,1.548,564,1.548,565,1.548,566,1.548,567,1.548,568,2.387,569,2.387,570,1.872,571,1.548,572,2.387,573,1.87,574,2.387,575,1.548,576,3.536,577,1.548,578,2.387,579,2.913,580,1.548,581,2.387,582,1.548,583,1.548,584,2.387,585,1.548,586,1.548,587,1.548,588,1.548,589,1.548,590,1.548,591,1.548,592,1.548,593,1.548,594,1.548,595,1.548,596,1.548,597,1.548,598,2.913,599,2.387,600,1.548,601,1.548,602,1.548,603,2.913,604,1.548,605,1.548,606,2.387,607,2.387,608,1.548,609,2.913,610,1.548,611,1.548,612,1.548,613,1.548,614,1.548,615,2.387,616,2.387,617,1.548,618,1.548,619,1.548,620,2.913,621,1.548,622,1.548,623,1.548,624,1.548,625,1.548,626,1.548,627,1.548,628,1.548,629,1.548]],["title/license.html",[392,1.662,393,1.361,630,1.662]],["body/license.html",[4,0.342,19,0.054,73,0.054,74,0.054,101,2.108,118,2.158,120,2.108,148,2.335,177,2.575,235,2.108,344,1.759,451,2.575,452,2.575,543,3.562,570,2.575,630,2.575,631,3.283,632,4.357,633,3.283,634,3.283,635,3.283,636,3.283,637,4.027,638,3.283,639,3.283,640,3.283,641,3.283,642,4.027,643,3.283,644,4.889,645,3.283,646,4.027,647,4.357,648,3.283,649,4.027,650,3.283,651,3.283,652,3.283,653,2.575,654,3.283,655,3.283,656,3.283,657,3.283,658,3.283,659,3.283,660,3.283,661,3.283,662,4.027,663,4.027,664,3.283,665,3.283,666,4.027,667,3.283,668,3.283,669,3.283,670,3.283,671,3.283,672,3.283,673,3.283,674,3.283,675,3.283,676,3.283,677,3.283,678,3.283,679,3.283,680,3.283,681,3.283,682,2.575,683,3.283,684,3.283,685,3.283,686,3.283]],["title/modules.html",[573,2.177]],["body/modules.html",[19,0.06,73,0.06,74,0.06,573,2.533]],["title/overview.html",[687,2.659]],["body/overview.html",[0,0.136,19,0.06,73,0.06,74,0.06,687,3.08,688,3.928]],["title/miscellaneous/variables.html",[242,1.934,386,1.136]],["body/miscellaneous/variables.html",[2,0.385,4,0.357,8,0.789,16,0.694,17,1.283,18,1.277,19,0.069,20,1.787,23,0.603,51,0.646,54,1.049,64,1.052,73,0.03,74,0.03,86,2.435,90,0.926,92,1.787,94,1.131,95,2.974,101,0.926,105,1.131,117,0.926,118,0.773,129,1.131,130,1.787,131,1.131,132,0.773,133,1.131,134,1.131,135,1.131,136,1.131,137,1.131,138,0.926,139,1.131,140,1.131,141,2.495,142,1.131,143,1.131,144,1.131,145,1.131,146,1.771,147,1.131,148,0.773,149,1.131,150,1.131,151,1.131,152,1.131,153,1.131,154,1.771,155,1.131,156,1.131,157,1.131,158,1.131,159,1.131,161,0.926,164,2.651,167,2.592,198,2.183,199,2.032,202,1.787,209,1.771,242,0.926,245,1.131,246,1.492,247,2.183,250,2.183,251,1.131,252,2.471,253,3.354,254,3.478,255,1.131,256,2.471,257,1.131,258,2.471,259,1.131,260,2.471,261,1.131,262,2.471,263,1.131,264,2.471,265,0.926,266,1.21,268,2.683,344,0.773,360,1.131,374,1.131,386,0.773,387,2.183,390,2.023,393,2.196,527,2.471,653,2.471,682,1.131,689,3.15,690,3.15,691,3.15,692,3.421,693,3.15,694,3.15,695,2.258,696,1.442,697,1.442,698,1.442,699,1.442,700,4.208,701,4.036,702,4.677,703,4.864,704,4.606,705,4.036,706,3.628,707,3.15,708,4.336,709,4.277,710,4.277,711,3.628,712,3.15,713,3.15,714,3.15,715,3.926,716,3.421,717,2.784,718,3.15,719,2.258,720,3.15,721,1.442,722,1.442,723,1.442,724,1.442,725,1.442,726,1.442,727,1.442,728,1.442,729,1.442,730,2.258,731,1.442,732,1.442,733,2.258,734,1.442,735,1.442,736,1.442,737,2.258,738,1.442,739,1.442,740,1.442,741,1.442,742,1.442,743,1.442,744,1.442,745,1.442,746,1.442,747,1.442,748,2.258,749,1.442,750,1.442,751,1.442,752,1.442,753,1.442,754,1.442]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["0.10.2",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["0.10.5",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["0.26.4",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":385,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":243,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":241,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":244,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":240,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["0x3f",{"_index":188,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["1",{"_index":178,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["1)*parseint(req.query.perpag",{"_index":44,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["1.0.1",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["1.1.20150312",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["1.14.5",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["1.18.3",{"_index":330,"title":{},"body":{"dependencies.html":{}}}],["1.29.0",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":363,"title":{},"body":{"dependencies.html":{}}}],["1.3.4",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["1.4.1",{"_index":361,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["1.9.1",{"_index":359,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":249,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":219,"title":{},"body":{"classes/UserCtrl.html":{}}}],["100",{"_index":248,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":158,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["11.1.1",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["11000",{"_index":56,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["12",{"_index":623,"title":{},"body":{"index.html":{}}}],["127",{"_index":184,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["18",{"_index":619,"title":{},"body":{"index.html":{}}}],["2.0.0",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["2.0.3",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":328,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":370,"title":{},"body":{"dependencies.html":{}}}],["2.8.8",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["2018",{"_index":633,"title":{},"body":{"license.html":{}}}],["3",{"_index":482,"title":{},"body":{"index.html":{}}}],["3.0.5",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["4.11.1",{"_index":334,"title":{},"body":{"dependencies.html":{}}}],["4.16.0",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["4.16.4",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":332,"title":{},"body":{"dependencies.html":{}}}],["4.5.2",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["4.6.8",{"_index":367,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["47kb",{"_index":591,"title":{},"body":{"index.html":{}}}],["5.3.11",{"_index":357,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":186,"title":{},"body":{"classes/MediaCtrl.html":{},"index.html":{}}}],["6.0.0",{"_index":366,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":326,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":372,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":218,"title":{},"body":{"classes/UserCtrl.html":{}}}],["7",{"_index":688,"title":{},"body":{"overview.html":{}}}],["7.0",{"_index":613,"title":{},"body":{"index.html":{}}}],["7.0.0",{"_index":274,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":278,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["7.0.3",{"_index":276,"title":{},"body":{"dependencies.html":{}}}],["8.3.0",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["8.9.4",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":33,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["abov",{"_index":661,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":15,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["action",{"_index":682,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["activ",{"_index":622,"title":{},"body":{"index.html":{}}}],["ad",{"_index":434,"title":{},"body":{"index.html":{}}}],["add",{"_index":430,"title":{},"body":{"index.html":{}}}],["addit",{"_index":444,"title":{},"body":{"index.html":{}}}],["admin",{"_index":227,"title":{},"body":{"classes/UserCtrl.html":{}}}],["ago",{"_index":601,"title":{},"body":{"index.html":{}}}],["allow",{"_index":575,"title":{},"body":{"index.html":{}}}],["along",{"_index":604,"title":{},"body":{"index.html":{}}}],["alpha.1",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["and/or",{"_index":656,"title":{},"body":{"license.html":{}}}],["angular",{"_index":301,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular.json",{"_index":414,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":273,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":275,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":277,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/common",{"_index":279,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":280,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/cor",{"_index":282,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/el",{"_index":465,"title":{},"body":{"index.html":{}}}],["angular/form",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["angular/languag",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":286,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/material:materi",{"_index":489,"title":{},"body":{"index.html":{}}}],["angular/platform",{"_index":287,"title":{},"body":{"dependencies.html":{}}}],["angular/pwa",{"_index":290,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/rout",{"_index":292,"title":{},"body":{"dependencies.html":{}}}],["angular/servic",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["angulardlitesystem",{"_index":394,"title":{},"body":{"index.html":{}}}],["angularx",{"_index":324,"title":{},"body":{"dependencies.html":{}}}],["anim",{"_index":380,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["anoth",{"_index":431,"title":{},"body":{"index.html":{}}}],["aot",{"_index":530,"title":{},"body":{"index.html":{}}}],["app",{"_index":246,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["applic",{"_index":411,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":580,"title":{},"body":{"index.html":{}}}],["approxim",{"_index":590,"title":{},"body":{"index.html":{}}}],["architect",{"_index":421,"title":{},"body":{"index.html":{}}}],["aris",{"_index":686,"title":{},"body":{"license.html":{}}}],["around",{"_index":621,"title":{},"body":{"index.html":{}}}],["array",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["articl",{"_index":20,"title":{},"body":{"classes/ArticleCtrl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["articlectrl",{"_index":1,"title":{"classes/ArticleCtrl.html":{}},"body":{"classes/ArticleCtrl.html":{},"coverage.html":{}}}],["articleschema",{"_index":252,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["artifact",{"_index":518,"title":{},"body":{"index.html":{}}}],["associ",{"_index":645,"title":{},"body":{"license.html":{}}}],["asymmetrik/ngx",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["auth",{"_index":140,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["auth0/angular",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["author",{"_index":675,"title":{},"body":{"license.html":{}}}],["automat",{"_index":508,"title":{},"body":{"index.html":{}}}],["autopopulatelead",{"_index":253,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["awesom",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":192,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["backward",{"_index":605,"title":{},"body":{"index.html":{}}}],["base",{"_index":71,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{},"index.html":{}}}],["basectrl",{"_index":7,"title":{"classes/BaseCtrl.html":{}},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{},"coverage.html":{}}}],["basectrl:16",{"_index":31,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["basectrl:24",{"_index":63,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["basectrl:3",{"_index":65,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["basectrl:40",{"_index":40,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["basectrl:48",{"_index":68,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["basectrl:56",{"_index":36,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["basectrl:6",{"_index":48,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["bcryptj",{"_index":327,"title":{},"body":{"dependencies.html":{}}}],["be",{"_index":511,"title":{},"body":{"index.html":{}}}],["befor",{"_index":577,"title":{},"body":{"index.html":{}}}],["below",{"_index":469,"title":{},"body":{"index.html":{}}}],["beter",{"_index":559,"title":{},"body":{"index.html":{}}}],["bodi",{"_index":104,"title":{},"body":{"classes/ContactCtrl.html":{},"dependencies.html":{}}}],["boolean",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean(process.env.account_smtp_secur",{"_index":139,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["boolean(process.env.transporter_logg",{"_index":146,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":308,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["bootstrap/ng",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["bootstrap/schemat",{"_index":309,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["breakpoint",{"_index":488,"title":{},"body":{"index.html":{}}}],["bring",{"_index":602,"title":{},"body":{"index.html":{}}}],["browser",{"_index":288,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["bugfix",{"_index":625,"title":{},"body":{"index.html":{}}}],["build",{"_index":303,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["built",{"_index":470,"title":{},"body":{"index.html":{}}}],["bundl",{"_index":513,"title":{},"body":{"index.html":{}}}],["c",{"_index":177,"title":{},"body":{"classes/MediaCtrl.html":{},"license.html":{}}}],["calendar",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["capabl",{"_index":435,"title":{},"body":{"index.html":{}}}],["captcha",{"_index":365,"title":{},"body":{"dependencies.html":{}}}],["card",{"_index":494,"title":{},"body":{"index.html":{}}}],["categori",{"_index":86,"title":{},"body":{"classes/CategoryCtrl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoryctrl",{"_index":84,"title":{"classes/CategoryCtrl.html":{}},"body":{"classes/CategoryCtrl.html":{},"coverage.html":{}}}],["categoryschema",{"_index":256,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cb",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cb(null",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cd",{"_index":538,"title":{},"body":{"index.html":{}}}],["chai",{"_index":331,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["chang",{"_index":443,"title":{},"body":{"index.html":{}}}],["charcodeat",{"_index":193,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["charg",{"_index":641,"title":{},"body":{"license.html":{}}}],["check",{"_index":628,"title":{},"body":{"index.html":{}}}],["ckeditor",{"_index":333,"title":{},"body":{"dependencies.html":{}}}],["ckeditor/ckeditor5",{"_index":300,"title":{},"body":{"dependencies.html":{}}}],["claim",{"_index":678,"title":{},"body":{"license.html":{}}}],["clariti",{"_index":463,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["classic",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["classlist.j",{"_index":335,"title":{},"body":{"dependencies.html":{}}}],["cli",{"_index":281,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["cli.json",{"_index":416,"title":{},"body":{"index.html":{}}}],["clr/angular@next",{"_index":462,"title":{},"body":{"index.html":{}}}],["code",{"_index":57,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{},"index.html":{}}}],["color",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comma",{"_index":96,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["command",{"_index":432,"title":{},"body":{"index.html":{}}}],["comment",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commit",{"_index":558,"title":{},"body":{"index.html":{}}}],["commun",{"_index":474,"title":{},"body":{"index.html":{}}}],["compat",{"_index":373,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["compil",{"_index":506,"title":{},"body":{"index.html":{}}}],["compon",{"_index":461,"title":{},"body":{"index.html":{}}}],["concurr",{"_index":503,"title":{},"body":{"index.html":{}}}],["condit",{"_index":660,"title":{},"body":{"license.html":{}}}],["configur",{"_index":417,"title":{},"body":{"index.html":{}}}],["connect",{"_index":120,"title":{},"body":{"classes/ContactCtrl.html":{},"dependencies.html":{},"license.html":{}}}],["console.error(err",{"_index":28,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["console.log('error",{"_index":109,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["console.log('messag",{"_index":113,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["console.log(error.messag",{"_index":111,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["console.log(file.fieldnam",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(file.originalnam",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(messag",{"_index":107,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["console.log(nodemailer.gettestmessageurl(info",{"_index":116,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["console.log(req.params.id",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":49,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["constructor",{"_index":581,"title":{},"body":{"index.html":{}}}],["contact",{"_index":92,"title":{},"body":{"classes/ContactCtrl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contactctrl",{"_index":89,"title":{"classes/ContactCtrl.html":{}},"body":{"classes/ContactCtrl.html":{},"coverage.html":{}}}],["contactschema",{"_index":258,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contain",{"_index":408,"title":{},"body":{"index.html":{}}}],["content",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contract",{"_index":683,"title":{},"body":{"license.html":{}}}],["copi",{"_index":543,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":632,"title":{},"body":{"license.html":{}}}],["core",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":11,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["count===0",{"_index":225,"title":{},"body":{"classes/UserCtrl.html":{}}}],["coverag",{"_index":234,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":42,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{},"index.html":{}}}],["createdat",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["critic",{"_index":624,"title":{},"body":{"index.html":{}}}],["d",{"_index":634,"title":{},"body":{"license.html":{}}}],["damag",{"_index":679,"title":{},"body":{"license.html":{}}}],["dashboard",{"_index":492,"title":{},"body":{"index.html":{}}}],["data",{"_index":495,"title":{},"body":{"index.html":{}}}],["datasourc",{"_index":497,"title":{},"body":{"index.html":{}}}],["date",{"_index":54,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["deal",{"_index":646,"title":{},"body":{"license.html":{}}}],["debug",{"_index":147,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["decod",{"_index":191,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["default",{"_index":17,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{},"miscellaneous/variables.html":{}}}],["defaultswagg",{"_index":247,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":21,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["delet",{"_index":12,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["demo",{"_index":423,"title":{},"body":{"index.html":{}}}],["depend",{"_index":272,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["deploy",{"_index":533,"title":{},"body":{"index.html":{}}}],["destin",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dev",{"_index":502,"title":{},"body":{"index.html":{}}}],["devdepend",{"_index":552,"title":{},"body":{"index.html":{}}}],["develop",{"_index":500,"title":{},"body":{"index.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":517,"title":{},"body":{"index.html":{}}}],["directori",{"_index":521,"title":{},"body":{"index.html":{}}}],["dist",{"_index":520,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":654,"title":{},"body":{"license.html":{}}}],["doc",{"_index":46,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["document",{"_index":235,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dotenv",{"_index":123,"title":{},"body":{"classes/ContactCtrl.html":{},"classes/UserCtrl.html":{},"dependencies.html":{}}}],["dotenv.load",{"_index":127,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["download",{"_index":438,"title":{},"body":{"index.html":{}}}],["draggabl",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duplic",{"_index":58,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["dynam",{"_index":289,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["e",{"_index":479,"title":{},"body":{"index.html":{}}}],["e.g",{"_index":445,"title":{},"body":{"index.html":{}}}],["e2",{"_index":429,"title":{},"body":{"index.html":{}}}],["each",{"_index":418,"title":{},"body":{"index.html":{}}}],["easi",{"_index":436,"title":{},"body":{"index.html":{}}}],["ecosystem",{"_index":477,"title":{},"body":{"index.html":{}}}],["edit",{"_index":544,"title":{},"body":{"index.html":{}}}],["eg",{"_index":536,"title":{},"body":{"index.html":{}}}],["element",{"_index":467,"title":{},"body":{"index.html":{}}}],["element.j",{"_index":466,"title":{},"body":{"index.html":{}}}],["email",{"_index":209,"title":{},"body":{"classes/UserCtrl.html":{},"miscellaneous/variables.html":{}}}],["encod",{"_index":174,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["end",{"_index":527,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["ensur",{"_index":610,"title":{},"body":{"index.html":{}}}],["env",{"_index":128,"title":{},"body":{"classes/ContactCtrl.html":{},"index.html":{}}}],["err",{"_index":26,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["err.cod",{"_index":61,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["error",{"_index":60,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["event",{"_index":674,"title":{},"body":{"license.html":{}}}],["exampl",{"_index":159,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["execut",{"_index":504,"title":{},"body":{"index.html":{}}}],["exist",{"_index":481,"title":{},"body":{"index.html":{}}}],["expand",{"_index":618,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":217,"title":{},"body":{"classes/UserCtrl.html":{}}}],["export",{"_index":72,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{},"index.html":{}}}],["express",{"_index":344,"title":{},"body":{"dependencies.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["ext",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extend",{"_index":6,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["extract",{"_index":426,"title":{},"body":{"index.html":{}}}],["featur",{"_index":565,"title":{},"body":{"index.html":{}}}],["field",{"_index":151,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["file.path",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filenam",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filepath",{"_index":166,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["fit",{"_index":670,"title":{},"body":{"license.html":{}}}],["flag",{"_index":523,"title":{},"body":{"index.html":{}}}],["flatpickr",{"_index":325,"title":{},"body":{"dependencies.html":{}}}],["fn",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["folder",{"_index":405,"title":{},"body":{"index.html":{}}}],["follow",{"_index":452,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["for(var",{"_index":176,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["free",{"_index":640,"title":{},"body":{"license.html":{}}}],["fresh",{"_index":453,"title":{},"body":{"index.html":{}}}],["fs",{"_index":197,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["fs.existssync(uploadsdir+'/'+req.params.id",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fs.mkdirsync(uploadsdir+'/'+req.params.id",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fs.unlinksync(filepath",{"_index":169,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["function",{"_index":266,"title":{"miscellaneous/functions.html":{}},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["function(",{"_index":175,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["function(next",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["furnish",{"_index":659,"title":{},"body":{"license.html":{}}}],["further",{"_index":627,"title":{},"body":{"index.html":{}}}],["g",{"_index":403,"title":{},"body":{"index.html":{}}}],["gener",{"_index":396,"title":{},"body":{"index.html":{}}}],["get",{"_index":392,"title":{"index.html":{},"license.html":{}},"body":{}}],["getal",{"_index":13,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["git",{"_index":539,"title":{},"body":{"index.html":{}}}],["git:remot",{"_index":541,"title":{},"body":{"index.html":{}}}],["go",{"_index":535,"title":{},"body":{"index.html":{}}}],["grant",{"_index":639,"title":{},"body":{"license.html":{}}}],["grid",{"_index":493,"title":{},"body":{"index.html":{}}}],["hammerj",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["header",{"_index":154,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["help",{"_index":475,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":638,"title":{},"body":{"license.html":{}}}],["heroku",{"_index":534,"title":{},"body":{"index.html":{}}}],["holder",{"_index":676,"title":{},"body":{"license.html":{}}}],["hope",{"_index":473,"title":{},"body":{"index.html":{}}}],["host",{"_index":134,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":312,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":516,"title":{},"body":{"index.html":{}}}],["i18n",{"_index":427,"title":{},"body":{"index.html":{}}}],["id",{"_index":83,"title":{},"body":{"classes/BaseCtrl.html":{}}}],["identifi",{"_index":236,"title":{},"body":{"coverage.html":{}}}],["imag",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implement",{"_index":441,"title":{},"body":{"index.html":{}}}],["impli",{"_index":668,"title":{},"body":{"license.html":{}}}],["import",{"_index":69,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{},"index.html":{}}}],["improv",{"_index":585,"title":{},"body":{"index.html":{}}}],["includ",{"_index":148,"title":{},"body":{"classes/ContactCtrl.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["increas",{"_index":593,"title":{},"body":{"index.html":{}}}],["independ",{"_index":597,"title":{},"body":{"index.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{},"miscellaneous/variables.html":{}}}],["inherit",{"_index":30,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["init",{"_index":540,"title":{},"body":{"index.html":{}}}],["initi",{"_index":449,"title":{},"body":{"index.html":{}}}],["inject",{"_index":576,"title":{},"body":{"index.html":{}}}],["insert",{"_index":14,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["instal",{"_index":399,"title":{},"body":{"index.html":{}}}],["instead",{"_index":415,"title":{},"body":{"index.html":{}}}],["introduc",{"_index":567,"title":{},"body":{"index.html":{}}}],["invok",{"_index":439,"title":{},"body":{"index.html":{}}}],["ismatch",{"_index":213,"title":{},"body":{"classes/UserCtrl.html":{}}}],["item",{"_index":38,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["item.url",{"_index":168,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["jqueri",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["jsonwebtoken",{"_index":232,"title":{},"body":{"classes/UserCtrl.html":{},"dependencies.html":{}}}],["jwt",{"_index":231,"title":{},"body":{"classes/UserCtrl.html":{},"dependencies.html":{}}}],["jwt.sign",{"_index":215,"title":{},"body":{"classes/UserCtrl.html":{}}}],["karma",{"_index":526,"title":{},"body":{"index.html":{}}}],["keep",{"_index":606,"title":{},"body":{"index.html":{}}}],["key",{"_index":59,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["kind",{"_index":667,"title":{},"body":{"license.html":{}}}],["l",{"_index":179,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["lazi",{"_index":156,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["leaflet",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["learn",{"_index":612,"title":{},"body":{"index.html":{}}}],["level",{"_index":157,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["liabil",{"_index":680,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":677,"title":{},"body":{"license.html":{}}}],["librari",{"_index":412,"title":{},"body":{"index.html":{}}}],["licens",{"_index":630,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":649,"title":{},"body":{"license.html":{}}}],["limit(parseint(req.query.perpage)).exec(function(err",{"_index":45,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["line",{"_index":546,"title":{},"body":{"index.html":{}}}],["list",{"_index":98,"title":{},"body":{"classes/ContactCtrl.html":{},"index.html":{}}}],["listen",{"_index":531,"title":{},"body":{"index.html":{}}}],["lite",{"_index":635,"title":{},"body":{"license.html":{}}}],["load",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localhost:3000",{"_index":532,"title":{},"body":{"index.html":{}}}],["localhost:4200",{"_index":510,"title":{},"body":{"index.html":{}}}],["log",{"_index":150,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":145,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":207,"title":{},"body":{"classes/UserCtrl.html":{},"index.html":{}}}],["long",{"_index":615,"title":{},"body":{"index.html":{}}}],["longer",{"_index":586,"title":{},"body":{"index.html":{}}}],["lowercas",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lt",{"_index":617,"title":{},"body":{"index.html":{}}}],["major",{"_index":603,"title":{},"body":{"index.html":{}}}],["make",{"_index":433,"title":{},"body":{"index.html":{}}}],["manag",{"_index":437,"title":{},"body":{"index.html":{}}}],["manifest",{"_index":456,"title":{},"body":{"index.html":{}}}],["master",{"_index":561,"title":{},"body":{"index.html":{}}}],["match",{"_index":74,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":458,"title":{},"body":{"index.html":{}}}],["math.random().tostring(36).substring(7)}${ext",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mean",{"_index":587,"title":{},"body":{"index.html":{}}}],["media",{"_index":164,"title":{},"body":{"classes/MediaCtrl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mediactrl",{"_index":160,"title":{"classes/MediaCtrl.html":{}},"body":{"classes/MediaCtrl.html":{},"coverage.html":{}}}],["mediaschema",{"_index":260,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["merchant",{"_index":669,"title":{},"body":{"license.html":{}}}],["merg",{"_index":652,"title":{},"body":{"license.html":{}}}],["messag",{"_index":94,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["migrat",{"_index":614,"title":{},"body":{"index.html":{}}}],["miscellan",{"_index":386,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":631,"title":{},"body":{"license.html":{}}}],["mkdir",{"_index":537,"title":{},"body":{"index.html":{}}}],["mlab",{"_index":557,"title":{},"body":{"index.html":{}}}],["mode",{"_index":529,"title":{},"body":{"index.html":{}}}],["model",{"_index":10,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["models/articl",{"_index":70,"title":{},"body":{"classes/ArticleCtrl.html":{}}}],["models/categori",{"_index":88,"title":{},"body":{"classes/CategoryCtrl.html":{}}}],["models/contact",{"_index":126,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["models/media",{"_index":195,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["models/task",{"_index":204,"title":{},"body":{"classes/TaskCtrl.html":{}}}],["models/us",{"_index":233,"title":{},"body":{"classes/UserCtrl.html":{}}}],["modifi",{"_index":651,"title":{},"body":{"license.html":{}}}],["modrewrit",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["modul",{"_index":573,"title":{"modules.html":{}},"body":{"index.html":{},"modules.html":{}}}],["mongodb",{"_index":401,"title":{},"body":{"index.html":{}}}],["mongodburi",{"_index":250,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongoos",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["mongoose.model('articl",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.model('categori",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.model('contact",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.model('media",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.model('task",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.model('us",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.schema",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["month",{"_index":620,"title":{},"body":{"index.html":{}}}],["more",{"_index":609,"title":{},"body":{"index.html":{}}}],["morgan",{"_index":358,"title":{},"body":{"dependencies.html":{}}}],["move",{"_index":551,"title":{},"body":{"index.html":{}}}],["multer",{"_index":360,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["multer.diskstorag",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multer.inst",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multer.storageengin",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multipl",{"_index":409,"title":{},"body":{"index.html":{}}}],["myservic",{"_index":579,"title":{},"body":{"index.html":{}}}],["name",{"_index":390,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name=mi",{"_index":491,"title":{},"body":{"index.html":{}}}],["nav",{"_index":490,"title":{},"body":{"index.html":{}}}],["navig",{"_index":486,"title":{},"body":{"index.html":{}}}],["need",{"_index":117,"title":{},"body":{"classes/ContactCtrl.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":51,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":306,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ng2",{"_index":362,"title":{},"body":{"dependencies.html":{}}}],["ngmodul",{"_index":578,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":364,"title":{},"body":{"dependencies.html":{}}}],["node.j",{"_index":400,"title":{},"body":{"index.html":{}}}],["nodemail",{"_index":124,"title":{},"body":{"classes/ContactCtrl.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":131,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["noninfring",{"_index":673,"title":{},"body":{"license.html":{}}}],["notic",{"_index":662,"title":{},"body":{"license.html":{}}}],["now",{"_index":413,"title":{},"body":{"index.html":{}}}],["npm",{"_index":402,"title":{},"body":{"index.html":{}}}],["number(process.env.account_smtp_port",{"_index":137,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["o",{"_index":182,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["o(0x80",{"_index":187,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["o(0xc0",{"_index":185,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["obj",{"_index":50,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["obj.createdat",{"_index":53,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["obj.imag",{"_index":228,"title":{},"body":{"classes/UserCtrl.html":{}}}],["obj.rol",{"_index":226,"title":{},"body":{"classes/UserCtrl.html":{}}}],["obj.save((err",{"_index":55,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["obj.subject",{"_index":102,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["obj.text",{"_index":106,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["object",{"_index":95,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["obtain",{"_index":643,"title":{},"body":{"license.html":{}}}],["occur",{"_index":110,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["on",{"_index":563,"title":{},"body":{"index.html":{}}}],["onfileuploadcomplet",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onfileuploadstart",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onlin",{"_index":562,"title":{},"body":{"index.html":{}}}],["open",{"_index":509,"title":{},"body":{"index.html":{}}}],["option",{"_index":391,"title":{},"body":{"miscellaneous/functions.html":{}}}],["otherwis",{"_index":685,"title":{},"body":{"license.html":{}}}],["out",{"_index":451,"title":{},"body":{"index.html":{},"license.html":{}}}],["overview",{"_index":687,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":549,"title":{},"body":{"index.html":{}}}],["packag",{"_index":271,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":545,"title":{},"body":{"index.html":{}}}],["pagin",{"_index":499,"title":{},"body":{"index.html":{}}}],["paramet",{"_index":389,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parser",{"_index":329,"title":{},"body":{"dependencies.html":{}}}],["particular",{"_index":671,"title":{},"body":{"license.html":{}}}],["pass",{"_index":143,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["password",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patch",{"_index":626,"title":{},"body":{"index.html":{}}}],["path",{"_index":125,"title":{},"body":{"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{}}}],["path.extname(file.originalnam",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path.resolve(__dirnam",{"_index":198,"title":{},"body":{"classes/MediaCtrl.html":{},"miscellaneous/variables.html":{}}}],["perform",{"_index":584,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":637,"title":{},"body":{"license.html":{}}}],["permit",{"_index":658,"title":{},"body":{"license.html":{}}}],["person",{"_index":642,"title":{},"body":{"license.html":{}}}],["piec",{"_index":611,"title":{},"body":{"index.html":{}}}],["plaintext",{"_index":103,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["polyfil",{"_index":446,"title":{},"body":{"index.html":{}}}],["pool",{"_index":119,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["popper.j",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["populate('categori",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["populate('comments.us",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["populate('media",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port",{"_index":136,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["portion",{"_index":665,"title":{},"body":{"license.html":{}}}],["postinstal",{"_index":547,"title":{},"body":{"index.html":{}}}],["pre",{"_index":496,"title":{},"body":{"index.html":{}}}],["prerequisit",{"_index":398,"title":{},"body":{"index.html":{}}}],["process.env.account_pass",{"_index":144,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["process.env.account_smtp_host",{"_index":135,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["process.env.account_us",{"_index":142,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["process.env.admin_email",{"_index":100,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["process.env.app_secret",{"_index":216,"title":{},"body":{"classes/UserCtrl.html":{}}}],["process.env.nodemailer_from",{"_index":153,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["process.env.nodemailer_servic",{"_index":133,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["process.exit(1",{"_index":112,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["prod",{"_index":522,"title":{},"body":{"index.html":{}}}],["product",{"_index":422,"title":{},"body":{"index.html":{}}}],["project",{"_index":395,"title":{},"body":{"index.html":{}}}],["projecttyp",{"_index":420,"title":{},"body":{"index.html":{}}}],["properti",{"_index":9,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["protractor",{"_index":528,"title":{},"body":{"index.html":{}}}],["proud",{"_index":566,"title":{},"body":{"index.html":{}}}],["provid",{"_index":570,"title":{},"body":{"index.html":{},"license.html":{}}}],["providedin",{"_index":583,"title":{},"body":{"index.html":{}}}],["public",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["publish",{"_index":653,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["purpos",{"_index":672,"title":{},"body":{"license.html":{}}}],["push",{"_index":560,"title":{},"body":{"index.html":{}}}],["pwa",{"_index":455,"title":{},"body":{"index.html":{}}}],["re",{"_index":24,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["readm",{"_index":629,"title":{},"body":{"index.html":{}}}],["real",{"_index":555,"title":{},"body":{"index.html":{}}}],["rearrang",{"_index":608,"title":{},"body":{"index.html":{}}}],["recipi",{"_index":99,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["recycl",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ref",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refer",{"_index":582,"title":{},"body":{"index.html":{}}}],["referenc",{"_index":574,"title":{},"body":{"index.html":{}}}],["regist",{"_index":208,"title":{},"body":{"classes/UserCtrl.html":{},"index.html":{}}}],["registri",{"_index":472,"title":{},"body":{"index.html":{}}}],["releas",{"_index":598,"title":{},"body":{"index.html":{}}}],["reload",{"_index":515,"title":{},"body":{"index.html":{}}}],["remot",{"_index":556,"title":{},"body":{"index.html":{}}}],["remov",{"_index":588,"title":{},"body":{"index.html":{}}}],["removemedia",{"_index":162,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["replac",{"_index":553,"title":{},"body":{"index.html":{}}}],["repo",{"_index":542,"title":{},"body":{"index.html":{}}}],["req",{"_index":23,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{},"miscellaneous/variables.html":{}}}],["req.bodi",{"_index":67,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["req.body.email",{"_index":210,"title":{},"body":{"classes/UserCtrl.html":{}}}],["req.files[0].path",{"_index":172,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["req.params.id",{"_index":34,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["request",{"_index":564,"title":{},"body":{"index.html":{}}}],["requir",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.sendstatus(200",{"_index":35,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["res.sendstatus(400",{"_index":62,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["res.sendstatus(403",{"_index":211,"title":{},"body":{"classes/UserCtrl.html":{}}}],["res.status(200).json",{"_index":221,"title":{},"body":{"classes/UserCtrl.html":{}}}],["res.status(200).json(count",{"_index":29,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["res.status(200).json(doc",{"_index":47,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["res.status(200).json(item",{"_index":39,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["resiz",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["respons",{"_index":487,"title":{},"body":{"index.html":{}}}],["restart",{"_index":514,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":648,"title":{},"body":{"license.html":{}}}],["result",{"_index":73,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":27,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["rich",{"_index":476,"title":{},"body":{"index.html":{}}}],["right",{"_index":650,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":196,"title":{},"body":{"classes/MediaCtrl.html":{},"dependencies.html":{}}}],["rimraf.sync(`${uploadsdir",{"_index":171,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["role",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":404,"title":{},"body":{"index.html":{}}}],["run",{"_index":480,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":371,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["s",{"_index":180,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["s.join",{"_index":190,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["s.split(\"\")).length",{"_index":181,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["s[i",{"_index":189,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["safari",{"_index":594,"title":{},"body":{"index.html":{}}}],["same",{"_index":595,"title":{},"body":{"index.html":{}}}],["save",{"_index":589,"title":{},"body":{"index.html":{}}}],["scaffold",{"_index":447,"title":{},"body":{"index.html":{}}}],["schema",{"_index":254,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["schema.objectid",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemat",{"_index":442,"title":{},"body":{"index.html":{}}}],["script",{"_index":440,"title":{},"body":{"index.html":{}}}],["second",{"_index":220,"title":{},"body":{"classes/UserCtrl.html":{}}}],["secur",{"_index":138,"title":{},"body":{"classes/ContactCtrl.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":468,"title":{},"body":{"index.html":{}}}],["sell",{"_index":657,"title":{},"body":{"license.html":{}}}],["sender",{"_index":152,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["sendmail",{"_index":91,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["sent",{"_index":114,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["separ",{"_index":97,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["serv",{"_index":425,"title":{},"body":{"index.html":{}}}],["server",{"_index":501,"title":{},"body":{"index.html":{}}}],["servic",{"_index":132,"title":{},"body":{"classes/ContactCtrl.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["setrout",{"_index":267,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setroutes(app",{"_index":388,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setup",{"_index":457,"title":{},"body":{"index.html":{}}}],["sever",{"_index":599,"title":{},"body":{"index.html":{}}}],["shakabl",{"_index":569,"title":{},"body":{"index.html":{}}}],["shall",{"_index":663,"title":{},"body":{"license.html":{}}}],["side",{"_index":485,"title":{},"body":{"index.html":{}}}],["sidenav",{"_index":483,"title":{},"body":{"index.html":{}}}],["size",{"_index":592,"title":{},"body":{"index.html":{}}}],["skip((parseint(req.query.currentpag",{"_index":43,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["smaller",{"_index":571,"title":{},"body":{"index.html":{}}}],["smtp",{"_index":129,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["softwar",{"_index":644,"title":{},"body":{"license.html":{}}}],["sort",{"_index":498,"title":{},"body":{"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{},"index.html":{}}}],["specif",{"_index":448,"title":{},"body":{"index.html":{}}}],["srv",{"_index":550,"title":{},"body":{"index.html":{}}}],["srv/.../article.t",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["srv/.../category.t",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["srv/.../contact.t",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["srv/.../index.t",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["srv/.../media.t",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["srv/.../router.t",{"_index":387,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["srv/.../task.t",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["srv/.../user.t",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["srv/controllers/article.t",{"_index":5,"title":{},"body":{"classes/ArticleCtrl.html":{},"coverage.html":{}}}],["srv/controllers/article.ts:5",{"_index":22,"title":{},"body":{"classes/ArticleCtrl.html":{}}}],["srv/controllers/base.t",{"_index":75,"title":{},"body":{"classes/BaseCtrl.html":{},"coverage.html":{}}}],["srv/controllers/base.ts:16",{"_index":76,"title":{},"body":{"classes/BaseCtrl.html":{}}}],["srv/controllers/base.ts:24",{"_index":80,"title":{},"body":{"classes/BaseCtrl.html":{}}}],["srv/controllers/base.ts:3",{"_index":81,"title":{},"body":{"classes/BaseCtrl.html":{}}}],["srv/controllers/base.ts:40",{"_index":78,"title":{},"body":{"classes/BaseCtrl.html":{}}}],["srv/controllers/base.ts:48",{"_index":82,"title":{},"body":{"classes/BaseCtrl.html":{}}}],["srv/controllers/base.ts:56",{"_index":77,"title":{},"body":{"classes/BaseCtrl.html":{}}}],["srv/controllers/base.ts:6",{"_index":79,"title":{},"body":{"classes/BaseCtrl.html":{}}}],["srv/controllers/category.t",{"_index":85,"title":{},"body":{"classes/CategoryCtrl.html":{},"coverage.html":{}}}],["srv/controllers/category.ts:5",{"_index":87,"title":{},"body":{"classes/CategoryCtrl.html":{}}}],["srv/controllers/contact.t",{"_index":90,"title":{},"body":{"classes/ContactCtrl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["srv/controllers/contact.ts:34",{"_index":93,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["srv/controllers/contact.ts:36",{"_index":122,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["srv/controllers/media.t",{"_index":161,"title":{},"body":{"classes/MediaCtrl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["srv/controllers/media.ts:11",{"_index":165,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["srv/controllers/media.ts:13",{"_index":194,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["srv/controllers/media.ts:58",{"_index":170,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["srv/controllers/task.t",{"_index":201,"title":{},"body":{"classes/TaskCtrl.html":{},"coverage.html":{}}}],["srv/controllers/task.ts:5",{"_index":203,"title":{},"body":{"classes/TaskCtrl.html":{}}}],["srv/controllers/user.t",{"_index":206,"title":{},"body":{"classes/UserCtrl.html":{},"coverage.html":{}}}],["srv/controllers/user.ts:11",{"_index":230,"title":{},"body":{"classes/UserCtrl.html":{}}}],["srv/controllers/user.ts:36",{"_index":222,"title":{},"body":{"classes/UserCtrl.html":{}}}],["srv/controllers/user.ts:8",{"_index":223,"title":{},"body":{"classes/UserCtrl.html":{}}}],["srv/index.t",{"_index":245,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srv/models/article.t",{"_index":251,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srv/models/category.t",{"_index":255,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srv/models/contact.t",{"_index":257,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srv/models/media.t",{"_index":259,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srv/models/task.t",{"_index":261,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srv/models/user.t",{"_index":263,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srv/router/router.t",{"_index":265,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["stage",{"_index":424,"title":{},"body":{"index.html":{}}}],["start",{"_index":393,"title":{"index.html":{},"license.html":{}},"body":{"miscellaneous/variables.html":{}}}],["starter",{"_index":460,"title":{},"body":{"index.html":{}}}],["statement",{"_index":237,"title":{},"body":{"coverage.html":{}}}],["storag",{"_index":268,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":519,"title":{},"body":{"index.html":{}}}],["string",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string.fromcharcod",{"_index":183,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["subject",{"_index":101,"title":{},"body":{"classes/ContactCtrl.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["sublicens",{"_index":655,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":664,"title":{},"body":{"license.html":{}}}],["successfulli",{"_index":115,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["such",{"_index":410,"title":{},"body":{"index.html":{}}}],["support",{"_index":478,"title":{},"body":{"index.html":{}}}],["swagger",{"_index":374,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["system",{"_index":636,"title":{},"body":{"license.html":{}}}],["tabl",{"_index":270,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":269,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":419,"title":{},"body":{"index.html":{}}}],["task",{"_index":202,"title":{},"body":{"classes/TaskCtrl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskctrl",{"_index":200,"title":{"classes/TaskCtrl.html":{}},"body":{"classes/TaskCtrl.html":{},"coverage.html":{}}}],["taskschema",{"_index":262,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["term",{"_index":616,"title":{},"body":{"index.html":{}}}],["test",{"_index":428,"title":{},"body":{"index.html":{}}}],["tether",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["text",{"_index":105,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["theme",{"_index":459,"title":{},"body":{"index.html":{}}}],["this.model(req.bodi",{"_index":52,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["this.model.count((err",{"_index":224,"title":{},"body":{"classes/UserCtrl.html":{}}}],["this.model.countdocuments((err",{"_index":25,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["this.model.find({}).sort",{"_index":41,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["this.model.findon",{"_index":37,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["this.model.findoneandremov",{"_index":32,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["this.model.findoneandupd",{"_index":66,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{}}}],["this.populate('us",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":596,"title":{},"body":{"index.html":{}}}],["titl",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token",{"_index":214,"title":{},"body":{"classes/UserCtrl.html":{}}}],["toolbar",{"_index":484,"title":{},"body":{"index.html":{}}}],["top",{"_index":471,"title":{},"body":{"index.html":{}}}],["tort",{"_index":684,"title":{},"body":{"license.html":{}}}],["traffic",{"_index":149,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["transport",{"_index":130,"title":{},"body":{"classes/ContactCtrl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["transporter.clos",{"_index":121,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["transporter.sendmail(messag",{"_index":108,"title":{},"body":{"classes/ContactCtrl.html":{}}}],["tree",{"_index":568,"title":{},"body":{"index.html":{}}}],["tri",{"_index":450,"title":{},"body":{"index.html":{}}}],["trim",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tsc",{"_index":548,"title":{},"body":{"index.html":{}}}],["turn",{"_index":454,"title":{},"body":{"index.html":{}}}],["type",{"_index":64,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/chai",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["types/express",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["types/jasmin",{"_index":316,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["types/jasminewd2",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["types/nod",{"_index":320,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["typescript",{"_index":505,"title":{},"body":{"index.html":{}}}],["ui",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["undefin",{"_index":229,"title":{},"body":{"classes/UserCtrl.html":{}}}],["uniqu",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":524,"title":{},"body":{"index.html":{}}}],["updat",{"_index":16,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["upload",{"_index":199,"title":{},"body":{"classes/MediaCtrl.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["uploadfil",{"_index":163,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["uploadsdir",{"_index":167,"title":{},"body":{"classes/MediaCtrl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadsdir+'/'+req.params.id",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uri",{"_index":554,"title":{},"body":{"index.html":{}}}],["url",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["us",{"_index":118,"title":{},"body":{"classes/ContactCtrl.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":141,"title":{},"body":{"classes/ContactCtrl.html":{},"classes/UserCtrl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.comparepassword(req.body.password",{"_index":212,"title":{},"body":{"classes/UserCtrl.html":{}}}],["userctrl",{"_index":205,"title":{"classes/UserCtrl.html":{}},"body":{"classes/UserCtrl.html":{},"coverage.html":{}}}],["usernam",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userschema",{"_index":264,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["utf8",{"_index":173,"title":{},"body":{"classes/MediaCtrl.html":{}}}],["v6",{"_index":407,"title":{},"body":{"index.html":{}}}],["valu",{"_index":18,"title":{},"body":{"classes/ArticleCtrl.html":{},"classes/BaseCtrl.html":{},"classes/CategoryCtrl.html":{},"classes/ContactCtrl.html":{},"classes/MediaCtrl.html":{},"classes/TaskCtrl.html":{},"classes/UserCtrl.html":{},"miscellaneous/variables.html":{}}}],["variabl",{"_index":242,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":397,"title":{},"body":{"index.html":{}}}],["via",{"_index":525,"title":{},"body":{"index.html":{}}}],["vmware",{"_index":464,"title":{},"body":{"index.html":{}}}],["warranti",{"_index":666,"title":{},"body":{"license.html":{}}}],["watch",{"_index":512,"title":{},"body":{"index.html":{}}}],["web",{"_index":379,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["week",{"_index":600,"title":{},"body":{"index.html":{}}}],["we’v",{"_index":572,"title":{},"body":{"index.html":{}}}],["whether",{"_index":681,"title":{},"body":{"license.html":{}}}],["window",{"_index":507,"title":{},"body":{"index.html":{}}}],["without",{"_index":647,"title":{},"body":{"license.html":{}}}],["work",{"_index":607,"title":{},"body":{"index.html":{}}}],["worker",{"_index":294,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["workspac",{"_index":406,"title":{},"body":{"index.html":{}}}],["x",{"_index":155,"title":{},"body":{"classes/ContactCtrl.html":{},"miscellaneous/variables.html":{}}}],["yaml",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yaml.load('./config/default.yaml",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yamlj",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["zone.j",{"_index":384,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ArticleCtrl.html":{"url":"classes/ArticleCtrl.html","title":"class - ArticleCtrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArticleCtrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            srv/controllers/article.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                count\n                            \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                            \n                                insert\n                            \n                            \n                                    Abstract\n                                model\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     \n\n                    \n                \n                    \n                        \n                            Default value : Article\n                        \n                    \n                        \n                            \n                                    Defined in srv/controllers/article.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        count:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.countDocuments((err, count) => {\n      if (err) { return console.error(err); }\n      res.status(200).json(count);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        delete:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOneAndRemove({ _id: req.params.id }, (err) => {\n      if (err) { return console.error(err); }\n      res.sendStatus(200);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        get:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOne({ _id: req.params.id }, (err, item) => {\n      if (err) { return console.error(err); }\n      res.status(200).json(item);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getAll:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.find({}).sort('-created')\n              .skip((parseInt(req.query.currentPage)-1)*parseInt(req.query.perPage))\n              .limit(parseInt(req.query.perPage)).exec(function(err, docs) {\n                if (err) { return console.error(err); }\n                res.status(200).json(docs);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insert\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        insert:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    const obj = new this.model(req.body);\n    obj.createdAt = new Date();\n    obj.save((err, item) => {\n      // 11000 is the code for duplicate key error\n      if (err && err.code === 11000) {\n        res.sendStatus(400);\n      }\n      if (err) {\n        return console.error(err);\n      }\n      res.status(200).json(item);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOneAndUpdate({ _id: req.params.id }, req.body, (err) => {\n      if (err) { return console.error(err); }\n      res.sendStatus(200);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import Article from '../models/article';\nimport BaseCtrl from './base';\n\nexport default class ArticleCtrl extends BaseCtrl {\n  model = Article;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseCtrl.html":{"url":"classes/BaseCtrl.html","title":"class - BaseCtrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseCtrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            srv/controllers/base.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                            \n                                insert\n                            \n                            \n                                    Abstract\n                                model\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        count:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.countDocuments((err, count) => {\n      if (err) { return console.error(err); }\n      res.status(200).json(count);\n    });\n  }\n                        \n                    \n                        \n                            \n                                    Defined in srv/controllers/base.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        delete:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOneAndRemove({ _id: req.params.id }, (err) => {\n      if (err) { return console.error(err); }\n      res.sendStatus(200);\n    });\n  }\n                        \n                    \n                        \n                            \n                                    Defined in srv/controllers/base.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        get:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOne({ _id: req.params.id }, (err, item) => {\n      if (err) { return console.error(err); }\n      res.status(200).json(item);\n    });\n  }\n                        \n                    \n                        \n                            \n                                    Defined in srv/controllers/base.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getAll:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.find({}).sort('-created')\n              .skip((parseInt(req.query.currentPage)-1)*parseInt(req.query.perPage))\n              .limit(parseInt(req.query.perPage)).exec(function(err, docs) {\n                if (err) { return console.error(err); }\n                res.status(200).json(docs);\n    });\n  }\n                        \n                    \n                        \n                            \n                                    Defined in srv/controllers/base.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insert\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        insert:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    const obj = new this.model(req.body);\n    obj.createdAt = new Date();\n    obj.save((err, item) => {\n      // 11000 is the code for duplicate key error\n      if (err && err.code === 11000) {\n        res.sendStatus(400);\n      }\n      if (err) {\n        return console.error(err);\n      }\n      res.status(200).json(item);\n    });\n  }\n                        \n                    \n                        \n                            \n                                    Defined in srv/controllers/base.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in srv/controllers/base.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOneAndUpdate({ _id: req.params.id }, req.body, (err) => {\n      if (err) { return console.error(err); }\n      res.sendStatus(200);\n    });\n  }\n                        \n                    \n                        \n                            \n                                    Defined in srv/controllers/base.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        abstract class BaseCtrl {\n\n  abstract model: any;\n\n  // Get all\n  getAll = (req, res) => {\n    this.model.find({}).sort('-created')\n              .skip((parseInt(req.query.currentPage)-1)*parseInt(req.query.perPage))\n              .limit(parseInt(req.query.perPage)).exec(function(err, docs) {\n                if (err) { return console.error(err); }\n                res.status(200).json(docs);\n    });\n  }\n\n  // Count all\n  count = (req, res) => {\n    this.model.countDocuments((err, count) => {\n      if (err) { return console.error(err); }\n      res.status(200).json(count);\n    });\n  }\n\n  // Insert\n  insert = (req, res) => {\n    const obj = new this.model(req.body);\n    obj.createdAt = new Date();\n    obj.save((err, item) => {\n      // 11000 is the code for duplicate key error\n      if (err && err.code === 11000) {\n        res.sendStatus(400);\n      }\n      if (err) {\n        return console.error(err);\n      }\n      res.status(200).json(item);\n    });\n  }\n\n  // Get by id\n  get = (req, res) => {\n    this.model.findOne({ _id: req.params.id }, (err, item) => {\n      if (err) { return console.error(err); }\n      res.status(200).json(item);\n    });\n  }\n\n  // Update by id\n  update = (req, res) => {\n    this.model.findOneAndUpdate({ _id: req.params.id }, req.body, (err) => {\n      if (err) { return console.error(err); }\n      res.sendStatus(200);\n    });\n  }\n\n  // Delete by id\n  delete = (req, res) => {\n    this.model.findOneAndRemove({ _id: req.params.id }, (err) => {\n      if (err) { return console.error(err); }\n      res.sendStatus(200);\n    });\n  }\n}\n\nexport default BaseCtrl;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryCtrl.html":{"url":"classes/CategoryCtrl.html","title":"class - CategoryCtrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryCtrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            srv/controllers/category.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                count\n                            \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                            \n                                insert\n                            \n                            \n                                    Abstract\n                                model\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     \n\n                    \n                \n                    \n                        \n                            Default value : Category\n                        \n                    \n                        \n                            \n                                    Defined in srv/controllers/category.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        count:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.countDocuments((err, count) => {\n      if (err) { return console.error(err); }\n      res.status(200).json(count);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        delete:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOneAndRemove({ _id: req.params.id }, (err) => {\n      if (err) { return console.error(err); }\n      res.sendStatus(200);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        get:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOne({ _id: req.params.id }, (err, item) => {\n      if (err) { return console.error(err); }\n      res.status(200).json(item);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getAll:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.find({}).sort('-created')\n              .skip((parseInt(req.query.currentPage)-1)*parseInt(req.query.perPage))\n              .limit(parseInt(req.query.perPage)).exec(function(err, docs) {\n                if (err) { return console.error(err); }\n                res.status(200).json(docs);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insert\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        insert:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    const obj = new this.model(req.body);\n    obj.createdAt = new Date();\n    obj.save((err, item) => {\n      // 11000 is the code for duplicate key error\n      if (err && err.code === 11000) {\n        res.sendStatus(400);\n      }\n      if (err) {\n        return console.error(err);\n      }\n      res.status(200).json(item);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOneAndUpdate({ _id: req.params.id }, req.body, (err) => {\n      if (err) { return console.error(err); }\n      res.sendStatus(200);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import Category from '../models/category';\nimport BaseCtrl from './base';\n\nexport default class CategoryCtrl extends BaseCtrl {\n  model = Category;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContactCtrl.html":{"url":"classes/ContactCtrl.html","title":"class - ContactCtrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContactCtrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            srv/controllers/contact.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                sendMail\n                            \n                            \n                                count\n                            \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                            \n                                insert\n                            \n                            \n                                    Abstract\n                                model\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     \n\n                    \n                \n                    \n                        \n                            Default value : Contact\n                        \n                    \n                        \n                            \n                                    Defined in srv/controllers/contact.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendMail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sendMail:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n \t\tconst obj = new this.model(req.body);\n    \tobj.createdAt = new Date();\n    \tobj.save((err, item) => {\n\t      // 11000 is the code for duplicate key error\n\t      if (err && err.code === 11000) {\n\t        res.sendStatus(400);\n\t      }\n\t      if (err) {\n\t        return console.error(err);\n\t      }\n\t      res.status(200).json(item);\n\t    });\n \t    // Message object\n\t    let message = {\n\t        // Comma separated list of recipients\n\t        to: process.env.ADMIN_EMAIL,\n\t        // Subject of the message\n\t        subject: obj.subject,\n\t        // plaintext body\n\t        text: obj.text\n\t    };\n\t    console.log(message)\n\t    transporter.sendMail(message, (error, info) => {\n\t        if (error) {\n\t            console.log('Error occurred');\n\t            console.log(error.message);\n\t            return process.exit(1);\n\t        }\n\t        console.log('Message sent successfully!');\n\t        console.log(nodemailer.getTestMessageUrl(info));\n\t        // only needed when using pooled connections\n\t        transporter.close();\t        \n\t    });\n\t\t\n\n \t}\n                        \n                    \n                        \n                            \n                                    Defined in srv/controllers/contact.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        count:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.countDocuments((err, count) => {\n      if (err) { return console.error(err); }\n      res.status(200).json(count);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        delete:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOneAndRemove({ _id: req.params.id }, (err) => {\n      if (err) { return console.error(err); }\n      res.sendStatus(200);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        get:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOne({ _id: req.params.id }, (err, item) => {\n      if (err) { return console.error(err); }\n      res.status(200).json(item);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getAll:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.find({}).sort('-created')\n              .skip((parseInt(req.query.currentPage)-1)*parseInt(req.query.perPage))\n              .limit(parseInt(req.query.perPage)).exec(function(err, docs) {\n                if (err) { return console.error(err); }\n                res.status(200).json(docs);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insert\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        insert:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    const obj = new this.model(req.body);\n    obj.createdAt = new Date();\n    obj.save((err, item) => {\n      // 11000 is the code for duplicate key error\n      if (err && err.code === 11000) {\n        res.sendStatus(400);\n      }\n      if (err) {\n        return console.error(err);\n      }\n      res.status(200).json(item);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOneAndUpdate({ _id: req.params.id }, req.body, (err) => {\n      if (err) { return console.error(err); }\n      res.sendStatus(200);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as dotenv from 'dotenv';\nimport * as nodemailer from 'nodemailer';\nimport * as path from 'path';\n\nimport Contact from '../models/contact';\nimport BaseCtrl from './base';\n\ndotenv.load({ path: '.env' });\n// Create a SMTP transporter object\nlet transporter = nodemailer.createTransport(\n    {\n        service: process.env.NODEMAILER_SERVICE,\n        host: process.env.ACCOUNT_SMTP_HOST,\n        port: Number(process.env.ACCOUNT_SMTP_PORT),\n        secure: Boolean(process.env.ACCOUNT_SMTP_SECURE),\n        auth: {\n            user: process.env.ACCOUNT_USER,\n            pass: process.env.ACCOUNT_PASS\n        },\n        logger: Boolean(process.env.TRANSPORTER_LOGGER),\n        debug: Boolean(process.env.TRANSPORTER_LOGGER) // include SMTP traffic in the logs\n    },\n    {\n        // default message fields\n        // sender info\n        from: process.env.NODEMAILER_FROM,\n        headers: {\n            'X-Laziness-level': 1000 // just an example header, no need to use this\n        }\n    }\n);\n\nexport default class ContactCtrl extends BaseCtrl {\n  model = Contact;\n\n \tsendMail = (req, res) => {\n \t\tconst obj = new this.model(req.body);\n    \tobj.createdAt = new Date();\n    \tobj.save((err, item) => {\n\t      // 11000 is the code for duplicate key error\n\t      if (err && err.code === 11000) {\n\t        res.sendStatus(400);\n\t      }\n\t      if (err) {\n\t        return console.error(err);\n\t      }\n\t      res.status(200).json(item);\n\t    });\n \t    // Message object\n\t    let message = {\n\t        // Comma separated list of recipients\n\t        to: process.env.ADMIN_EMAIL,\n\t        // Subject of the message\n\t        subject: obj.subject,\n\t        // plaintext body\n\t        text: obj.text\n\t    };\n\t    console.log(message)\n\t    transporter.sendMail(message, (error, info) => {\n\t        if (error) {\n\t            console.log('Error occurred');\n\t            console.log(error.message);\n\t            return process.exit(1);\n\t        }\n\t        console.log('Message sent successfully!');\n\t        console.log(nodemailer.getTestMessageUrl(info));\n\t        // only needed when using pooled connections\n\t        transporter.close();\t        \n\t    });\n\t\t\n\n \t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaCtrl.html":{"url":"classes/MediaCtrl.html","title":"class - MediaCtrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaCtrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            srv/controllers/media.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                removeMedia\n                            \n                            \n                                uploadfile\n                            \n                            \n                                count\n                            \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                            \n                                insert\n                            \n                            \n                                    Abstract\n                                model\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     \n\n                    \n                \n                    \n                        \n                            Default value : Media\n                        \n                    \n                        \n                            \n                                    Defined in srv/controllers/media.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeMedia\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        removeMedia:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOne({ _id: req.params.id }, (err, item) => {\n      if (err) { return console.error(err); }\n      let filePath = uploadsDir +'/'+ item.url; \n      fs.unlinkSync(filePath);\n      this.model.findOneAndRemove({ _id: req.params.id }, (err) => {\n        if (err) { return console.error(err); }\n        \n        res.sendStatus(200);\n      });\n    });\n  }\n                        \n                    \n                        \n                            \n                                    Defined in srv/controllers/media.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadfile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uploadfile:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n  \trimraf.sync(`${uploadsDir}/**/*`);\n\n    let path = req.files[0].path\n    let UTF8 = {\n    encode: function(s){\n      for(var c, i = -1, l = (s = s.split(\"\")).length, o = String.fromCharCode; ++i = 127 ? o(0xc0 | (c >>> 6)) + o(0x80 | (c & 0x3f)) : s[i]\n      );\n      return s.join(\"\");\n    },\n    decode: function(s){\n      for(var a, b, i = -1, l = (s = s.split(\"\")).length, o = String.fromCharCode, c = \"charCodeAt\"; ++i \n                        \n                    \n                        \n                            \n                                    Defined in srv/controllers/media.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        count:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.countDocuments((err, count) => {\n      if (err) { return console.error(err); }\n      res.status(200).json(count);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        delete:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOneAndRemove({ _id: req.params.id }, (err) => {\n      if (err) { return console.error(err); }\n      res.sendStatus(200);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        get:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOne({ _id: req.params.id }, (err, item) => {\n      if (err) { return console.error(err); }\n      res.status(200).json(item);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getAll:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.find({}).sort('-created')\n              .skip((parseInt(req.query.currentPage)-1)*parseInt(req.query.perPage))\n              .limit(parseInt(req.query.perPage)).exec(function(err, docs) {\n                if (err) { return console.error(err); }\n                res.status(200).json(docs);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insert\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        insert:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    const obj = new this.model(req.body);\n    obj.createdAt = new Date();\n    obj.save((err, item) => {\n      // 11000 is the code for duplicate key error\n      if (err && err.code === 11000) {\n        res.sendStatus(400);\n      }\n      if (err) {\n        return console.error(err);\n      }\n      res.status(200).json(item);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOneAndUpdate({ _id: req.params.id }, req.body, (err) => {\n      if (err) { return console.error(err); }\n      res.sendStatus(200);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import Media from '../models/media';\nimport BaseCtrl from './base';\n\nimport * as rimraf from 'rimraf';\nimport * as path from 'path';\nimport * as fs  from 'fs';\n\nconst uploadsDir = path.resolve(__dirname, '../../../../uploads');\n\nexport default class MediaCtrl extends BaseCtrl {\n  model = Media;\n\n  uploadfile = (req, res) => {\n  \trimraf.sync(`${uploadsDir}/**/*`);\n\n    let path = req.files[0].path\n    let UTF8 = {\n    encode: function(s){\n      for(var c, i = -1, l = (s = s.split(\"\")).length, o = String.fromCharCode; ++i = 127 ? o(0xc0 | (c >>> 6)) + o(0x80 | (c & 0x3f)) : s[i]\n      );\n      return s.join(\"\");\n    },\n    decode: function(s){\n      for(var a, b, i = -1, l = (s = s.split(\"\")).length, o = String.fromCharCode, c = \"charCodeAt\"; ++i  {\n    this.model.findOne({ _id: req.params.id }, (err, item) => {\n      if (err) { return console.error(err); }\n      let filePath = uploadsDir +'/'+ item.url; \n      fs.unlinkSync(filePath);\n      this.model.findOneAndRemove({ _id: req.params.id }, (err) => {\n        if (err) { return console.error(err); }\n        \n        res.sendStatus(200);\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskCtrl.html":{"url":"classes/TaskCtrl.html","title":"class - TaskCtrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskCtrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            srv/controllers/task.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                count\n                            \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                            \n                                insert\n                            \n                            \n                                    Abstract\n                                model\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     \n\n                    \n                \n                    \n                        \n                            Default value : Task\n                        \n                    \n                        \n                            \n                                    Defined in srv/controllers/task.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        count:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.countDocuments((err, count) => {\n      if (err) { return console.error(err); }\n      res.status(200).json(count);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        delete:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOneAndRemove({ _id: req.params.id }, (err) => {\n      if (err) { return console.error(err); }\n      res.sendStatus(200);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        get:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOne({ _id: req.params.id }, (err, item) => {\n      if (err) { return console.error(err); }\n      res.status(200).json(item);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getAll:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.find({}).sort('-created')\n              .skip((parseInt(req.query.currentPage)-1)*parseInt(req.query.perPage))\n              .limit(parseInt(req.query.perPage)).exec(function(err, docs) {\n                if (err) { return console.error(err); }\n                res.status(200).json(docs);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insert\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        insert:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    const obj = new this.model(req.body);\n    obj.createdAt = new Date();\n    obj.save((err, item) => {\n      // 11000 is the code for duplicate key error\n      if (err && err.code === 11000) {\n        res.sendStatus(400);\n      }\n      if (err) {\n        return console.error(err);\n      }\n      res.status(200).json(item);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOneAndUpdate({ _id: req.params.id }, req.body, (err) => {\n      if (err) { return console.error(err); }\n      res.sendStatus(200);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import Task from '../models/task';\nimport BaseCtrl from './base';\n\nexport default class TaskCtrl extends BaseCtrl {\n  model = Task;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserCtrl.html":{"url":"classes/UserCtrl.html","title":"class - UserCtrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserCtrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            srv/controllers/user.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                model\n                            \n                            \n                                register\n                            \n                            \n                                count\n                            \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                            \n                                insert\n                            \n                            \n                                    Abstract\n                                model\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        login:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOne({ email: req.body.email }, (err, user) => {\n      if (!user) { return res.sendStatus(403); }\n      user.comparePassword(req.body.password, (error, isMatch) => {\n        if (!isMatch) { return res.sendStatus(403); }\n        const token = jwt.sign({ user: user }, process.env.APP_SECRET, { expiresIn: 60000 }); // , { expiresIn: 10 } seconds\n        res.status(200).json({ token: token });\n      });\n    });\n  }\n                        \n                    \n                        \n                            \n                                    Defined in srv/controllers/user.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     \n\n                    \n                \n                    \n                        \n                            Default value : User\n                        \n                    \n                        \n                            \n                                    Defined in srv/controllers/user.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        register:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    const obj = new this.model(req.body);\n    obj.createdAt = new Date();\n    this.model.count((err, count) => {\n      if (err) { return console.error(err); }\n      if (count===0) {\n        obj.role = 'admin';\n      } else {\n        obj.role = 'user';\n      }\n      obj.image = undefined;\n      obj.save((err, item) => {\n        // 11000 is the code for duplicate key error\n        if (err && err.code === 11000) {\n          res.sendStatus(400);\n        }\n        if (err) {\n          return console.error(err);\n        }\n        res.status(200).json(item);\n      });\n    });\n  }\n                        \n                    \n                        \n                            \n                                    Defined in srv/controllers/user.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        count:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.countDocuments((err, count) => {\n      if (err) { return console.error(err); }\n      res.status(200).json(count);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        delete:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOneAndRemove({ _id: req.params.id }, (err) => {\n      if (err) { return console.error(err); }\n      res.sendStatus(200);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        get:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOne({ _id: req.params.id }, (err, item) => {\n      if (err) { return console.error(err); }\n      res.status(200).json(item);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getAll:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.find({}).sort('-created')\n              .skip((parseInt(req.query.currentPage)-1)*parseInt(req.query.perPage))\n              .limit(parseInt(req.query.perPage)).exec(function(err, docs) {\n                if (err) { return console.error(err); }\n                res.status(200).json(docs);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insert\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        insert:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    const obj = new this.model(req.body);\n    obj.createdAt = new Date();\n    obj.save((err, item) => {\n      // 11000 is the code for duplicate key error\n      if (err && err.code === 11000) {\n        res.sendStatus(400);\n      }\n      if (err) {\n        return console.error(err);\n      }\n      res.status(200).json(item);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update:     \n\n                    \n                \n                    \n                        \n                            Default value : (req, res) => {\n    this.model.findOneAndUpdate({ _id: req.params.id }, req.body, (err) => {\n      if (err) { return console.error(err); }\n      res.sendStatus(200);\n    });\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseCtrl\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseCtrl:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as dotenv from 'dotenv';\nimport * as jwt from 'jsonwebtoken';\n\nimport User from '../models/user';\nimport BaseCtrl from './base';\n\nexport default class UserCtrl extends BaseCtrl {\n  model = User;\n\n    // Insert\n  register = (req, res) => {\n    const obj = new this.model(req.body);\n    obj.createdAt = new Date();\n    this.model.count((err, count) => {\n      if (err) { return console.error(err); }\n      if (count===0) {\n        obj.role = 'admin';\n      } else {\n        obj.role = 'user';\n      }\n      obj.image = undefined;\n      obj.save((err, item) => {\n        // 11000 is the code for duplicate key error\n        if (err && err.code === 11000) {\n          res.sendStatus(400);\n        }\n        if (err) {\n          return console.error(err);\n        }\n        res.status(200).json(item);\n      });\n    });\n  }\n\n\n  login = (req, res) => {\n    this.model.findOne({ email: req.body.email }, (err, user) => {\n      if (!user) { return res.sendStatus(403); }\n      user.comparePassword(req.body.password, (error, isMatch) => {\n        if (!isMatch) { return res.sendStatus(403); }\n        const token = jwt.sign({ user: user }, process.env.APP_SECRET, { expiresIn: 60000 }); // , { expiresIn: 10 } seconds\n        res.status(200).json({ token: token });\n      });\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                srv/controllers/article.ts\n            \n            \n                class\n            \n            \n                ArticleCtrl\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                srv/controllers/base.ts\n            \n            \n                class\n            \n            \n                BaseCtrl\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                srv/controllers/category.ts\n            \n            \n                class\n            \n            \n                CategoryCtrl\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                srv/controllers/contact.ts\n            \n            \n                class\n            \n            \n                ContactCtrl\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                srv/controllers/contact.ts\n            \n            \n                variable\n            \n            \n                transporter\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/controllers/media.ts\n            \n            \n                class\n            \n            \n                MediaCtrl\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                srv/controllers/media.ts\n            \n            \n                variable\n            \n            \n                uploadsDir\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/controllers/task.ts\n            \n            \n                class\n            \n            \n                TaskCtrl\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                srv/controllers/user.ts\n            \n            \n                class\n            \n            \n                UserCtrl\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                srv/index.ts\n            \n            \n                variable\n            \n            \n                app\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/index.ts\n            \n            \n                variable\n            \n            \n                defaultSwagger\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                srv/index.ts\n            \n            \n                variable\n            \n            \n                mongodbURI\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/index.ts\n            \n            \n                variable\n            \n            \n                uploadsDir\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/models/article.ts\n            \n            \n                variable\n            \n            \n                Article\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/models/article.ts\n            \n            \n                variable\n            \n            \n                articleSchema\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/models/article.ts\n            \n            \n                variable\n            \n            \n                autoPopulateLead\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/models/article.ts\n            \n            \n                variable\n            \n            \n                Schema\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/models/category.ts\n            \n            \n                variable\n            \n            \n                autoPopulateLead\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/models/category.ts\n            \n            \n                variable\n            \n            \n                Category\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/models/category.ts\n            \n            \n                variable\n            \n            \n                categorySchema\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/models/category.ts\n            \n            \n                variable\n            \n            \n                Schema\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/models/contact.ts\n            \n            \n                variable\n            \n            \n                Contact\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/models/contact.ts\n            \n            \n                variable\n            \n            \n                contactSchema\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/models/contact.ts\n            \n            \n                variable\n            \n            \n                Schema\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/models/media.ts\n            \n            \n                variable\n            \n            \n                autoPopulateLead\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/models/media.ts\n            \n            \n                variable\n            \n            \n                Media\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/models/media.ts\n            \n            \n                variable\n            \n            \n                mediaSchema\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/models/media.ts\n            \n            \n                variable\n            \n            \n                Schema\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/models/task.ts\n            \n            \n                variable\n            \n            \n                autoPopulateLead\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/models/task.ts\n            \n            \n                variable\n            \n            \n                Schema\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/models/task.ts\n            \n            \n                variable\n            \n            \n                Task\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/models/task.ts\n            \n            \n                variable\n            \n            \n                taskSchema\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/models/user.ts\n            \n            \n                variable\n            \n            \n                User\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/models/user.ts\n            \n            \n                variable\n            \n            \n                userSchema\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/router/router.ts\n            \n            \n                function\n            \n            \n                setRoutes\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/router/router.ts\n            \n            \n                variable\n            \n            \n                storage\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/router/router.ts\n            \n            \n                variable\n            \n            \n                upload\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                srv/router/router.ts\n            \n            \n                variable\n            \n            \n                uploadsDir\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.0.0\n        \n            @angular/cdk : ~7.0.3\n        \n            @angular/cli : ~7.0.2\n        \n            @angular/common : ~7.0.0\n        \n            @angular/compiler : ~7.0.0\n        \n            @angular/compiler-cli : ~7.0.0\n        \n            @angular/core : ~7.0.0\n        \n            @angular/forms : ~7.0.0\n        \n            @angular/http : ~7.0.0\n        \n            @angular/language-service : ~7.0.0\n        \n            @angular/material : ^7.0.3\n        \n            @angular/platform-browser : ~7.0.0\n        \n            @angular/platform-browser-dynamic : ~7.0.0\n        \n            @angular/pwa : ^0.10.5\n        \n            @angular/router : ~7.0.0\n        \n            @angular/service-worker : ~7.0.0\n        \n            @asymmetrik/ngx-leaflet : ^4.0.0\n        \n            @auth0/angular-jwt : ^2.0.0\n        \n            @ckeditor/ckeditor5-angular : ^1.0.1\n        \n            @ckeditor/ckeditor5-build-classic : ^11.1.1\n        \n            @ng-bootstrap/ng-bootstrap : ^4.0.0\n        \n            @ng-bootstrap/schematics : ^2.0.0-alpha.1\n        \n            @types/chai-http : ^3.0.5\n        \n            @types/express : ^4.16.0\n        \n            @types/jasmine : ~2.8.8\n        \n            @types/jasminewd2 : ~2.0.3\n        \n            @types/node : ~8.9.4\n        \n            angular-calendar : ^0.26.4\n        \n            angularx-flatpickr : ^6.1.0\n        \n            bcryptjs : ^2.4.3\n        \n            body-parser : ^1.18.3\n        \n            bootstrap : ^4.0.0\n        \n            chai : ^4.2.0\n        \n            chai-http : ^4.2.0\n        \n            ckeditor : ^4.11.1\n        \n            classlist.js : ^1.1.20150312\n        \n            connect-modrewrite : ^0.10.2\n        \n            core-js : ^2.5.7\n        \n            date-fns : ^1.29.0\n        \n            dotenv : ^6.1.0\n        \n            express : ^4.16.4\n        \n            flatpickr : ^4.5.2\n        \n            font-awesome : ^4.7.0\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.3.1\n        \n            jsonwebtoken : ^8.3.0\n        \n            leaflet : ^1.3.4\n        \n            mongoose : ^5.3.11\n        \n            morgan : ^1.9.1\n        \n            multer : ^1.4.1\n        \n            ng2-file-upload : ^1.3.0\n        \n            ngx-captcha : ^6.0.0\n        \n            nodemailer : ^4.6.8\n        \n            popper.js : ^1.14.5\n        \n            rimraf : ^2.6.2\n        \n            rxjs : ~6.3.3\n        \n            rxjs-compat : ^6.3.3\n        \n            swagger-ui-express : ^4.0.1\n        \n            tether : ^1.4.5\n        \n            web-animations-js : ^2.3.1\n        \n            yamljs : ^0.3.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            setRoutes   (srv/.../router.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    srv/router/router.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            setRoutes\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetRoutes(app)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngularDLiteSystems\nThis project was generated with Angular CLI version 7.0.2.\nPrerequisites\n\nInstall Node.js and MongoDB\nInstall Angular CLI: npm i -g @angular/cli\nFrom project root folder install all the dependencies: npm i\n\nCLI Workspaces\nSince CLI v6, CLI workspaces containing multiple projects, such as multiple applications or libraries. CLI projects will now use angular.json instead of .angular-cli.json for build and project configuration.\nEach CLI workspace has projects, each project has targets, and each target can have configurations.\n{\n  \"projects\": {\n    \"my-project-name\": {\n      \"projectType\": \"application\",\n      \"architect\": {\n        \"build\": {\n          \"configurations\": {\n            \"production\": {},\n            \"demo\": {},\n            \"staging\": {},\n          }\n        },\n        \"serve\": {},\n        \"extract-i18n\": {},\n        \"test\": {},\n      }\n    },\n    \"my-project-name-e2e\": {}\n  },\n}ng add\nAnother new CLI command ng add  makes adding new capabilities to your project easy. ng add will use your package manager to download new dependencies and invoke an installation script (implemented as a schematic) which can update your project with configuration changes, add additional dependencies (e.g. polyfills), or scaffold package-specific initialization code.\nTry out some of the following on your fresh ng new application:\nng add @angular/pwa — Turn your application into a PWA by adding an app manifest and service worker\nng add @ng-bootstrap/schematics — Add ng-bootstrap to your application\nng add @angular/material — Install and setup Angular Material and theming and register new starter components into ng generate\nng add @clr/angular@next — Install and setup Clarity from VMWare\nng add @angular/elements — Add the needed document-register-element.js polyfill and dependencies for Angular Elements (see below)\nBecause ng add is built on top of schematics and the npm registry, our hope is that libraries and the community will help us build a rich ecosystem of ng add supporting packages.\ne you have run ng add @angular/material to add material to an existing application, you will also be able to generate 3 new starter components.\nMaterial Sidenav\nYou can now generate a starter component including a toolbar with the app name and the side navigation. This component is responsive based on breakpoints.\nRun: ng generate @angular/material:material-nav --name=my-nav\nMaterial Dashboard\nYou can now generate a starter dashboard component containing a dynamic grid list of cards.\nRun: ng generate @angular/material:material-dashboard --name=my-dashboard\nMaterial Data Table\nYou can generate a starter data table component that is pre-configured with a datasource for sorting and pagination.\nRun: ng generate @angular/material:material-table --name=my-table\nDevelopment server\nnpm run dev: concurrently execute MongoDB, Angular build, TypeScript compiler and Express server.\nA window will automatically open at localhost:4200. Angular and Express files are being watched. Any change automatically creates a new bundle, restart Express server and reload your browser.\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nProduction mode\nnpm run prod: run the project with a production bundle and AOT compilation listening at localhost:3000 \nRun ng build--prod flag for a production build. The build artifacts will be stored in the dist/ directory. \nDeploy (Heroku)\n\nGo to Heroku and create a new app (eg: your-app-name)\nInstall Heroku CLI\nheroku login\nmkdir your-app-name && cd your-app-name\ngit init\nheroku git:remote -a your-app-name\nDownload this repo and copy all files into your-app-name folder\nnpm i\nEdit package.json as following:\nadd this line to scripts: \"postinstall\": \"tsc -p srv && ng build --prod\"\nmove the following packages from devDependencies to dependencies: @angular/cli, @angular/compiler-cli, @types/jasmine, @types/node, chai, chai-http and typescript.\n\n\nEdit .env and replace the MongoDB URI with a real remote MongoDB server. You can create a MongoDB server with Heroku or mLab.\ngit add .\ngit commit -am \"Make it beter\"\ngit push heroku master\nheroku open and a window will open with your app online\n\nLibrary Support\nOne of the most requested features for our CLI has been support for creating and building libraries, and we are proud to introduce:\nng generate library \nTree Shakable Providers\nTo make your applications smaller, we’ve moved from modules referencing services to services referencing modules. This allows us to only bundle services into your code base in modules where they are injected.\nBefore\n@NgModule({\n  ...\n  providers: [MyService]\n})\nexport class AppModule {}import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MyService {\n  constructor() { }\n}After\nNo references are needed in our NgModule.\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MyService {\n  constructor() { }\n}Animations Performance Improvements\nWe’ve updated our implementation of Animations to no longer need the web animations polyfill. This means that you can remove this polyfill from your application and save approximately 47KB of bundle size, while increasing animations performance in Safari at the same time.\nRxJS v6\nAngular has been updated to use v6 of RxJS. RxJS is an independent project that released v6 several weeks ago. RxJS v6 brings with it several major changes, along with a backwards compatibility package rxjs-compat that will keep your applications working.\nRxJS has been rearranged to make it more tree-shakable, ensuring that only the pieces of RxJS that you use are included in your production bundles.\nIf you use ng update, your application should keep working, but you can learn more about 7.0 migration.\nLong Term Support (LTS)\nWe are expanding our Long Term Support to all major releases.\nEach major release will be supported for 18 months with around 6 months of active development followed by 12 months of critical bugfixes and security patches.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 D-Lite Systems\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (srv/.../index.ts)\n                        \n                        \n                            Article   (srv/.../article.ts)\n                        \n                        \n                            articleSchema   (srv/.../article.ts)\n                        \n                        \n                            autoPopulateLead   (srv/.../task.ts)\n                        \n                        \n                            autoPopulateLead   (srv/.../media.ts)\n                        \n                        \n                            autoPopulateLead   (srv/.../category.ts)\n                        \n                        \n                            autoPopulateLead   (srv/.../article.ts)\n                        \n                        \n                            Category   (srv/.../category.ts)\n                        \n                        \n                            categorySchema   (srv/.../category.ts)\n                        \n                        \n                            Contact   (srv/.../contact.ts)\n                        \n                        \n                            contactSchema   (srv/.../contact.ts)\n                        \n                        \n                            defaultSwagger   (srv/.../index.ts)\n                        \n                        \n                            Media   (srv/.../media.ts)\n                        \n                        \n                            mediaSchema   (srv/.../media.ts)\n                        \n                        \n                            mongodbURI   (srv/.../index.ts)\n                        \n                        \n                            Schema   (srv/.../article.ts)\n                        \n                        \n                            Schema   (srv/.../task.ts)\n                        \n                        \n                            Schema   (srv/.../contact.ts)\n                        \n                        \n                            Schema   (srv/.../category.ts)\n                        \n                        \n                            Schema   (srv/.../media.ts)\n                        \n                        \n                            storage   (srv/.../router.ts)\n                        \n                        \n                            Task   (srv/.../task.ts)\n                        \n                        \n                            taskSchema   (srv/.../task.ts)\n                        \n                        \n                            transporter   (srv/.../contact.ts)\n                        \n                        \n                            upload   (srv/.../router.ts)\n                        \n                        \n                            uploadsDir   (srv/.../router.ts)\n                        \n                        \n                            uploadsDir   (srv/.../media.ts)\n                        \n                        \n                            uploadsDir   (srv/.../index.ts)\n                        \n                        \n                            User   (srv/.../user.ts)\n                        \n                        \n                            userSchema   (srv/.../user.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    srv/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            app\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        app:     \n\n                    \n                \n                    \n                        \n                            Default value : express()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultSwagger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultSwagger:     \n\n                    \n                \n                    \n                        \n                            Default value : YAML.load('./config/default.yaml')\n                        \n                    \n\n                \n                    \n                        Load default swagger from yaml file\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mongodbURI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mongodbURI:     \n\n                    \n                \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadsDir\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uploadsDir:     \n\n                    \n                \n                    \n                        \n                            Default value : path.resolve(__dirname, '../../../uploads')\n                        \n                    \n\n\n            \n        \n\n    srv/models/article.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Article\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Article:     \n\n                    \n                \n                    \n                        \n                            Default value : mongoose.model('Article', articleSchema)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            articleSchema\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        articleSchema:     \n\n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  title: { type: String, index: true, required: true },\n  content: { type: String, index: true, required: true },\n  createdAt: Date,\n  public : Boolean,\n  published: Boolean,\n  start : Date,\n  end : Date,\n  media: { type: Schema.ObjectId, ref: 'Media' },\n  user: { type: Schema.ObjectId, ref: 'User', required: true },\n  categories:[{ type: Schema.ObjectId, ref: 'Category', required: true }],\n  updated: [{\n  \tuser : Object,\n  \tdate: Date\n  }],\n  comments: [{\n    user: Object,\n    comment: { type: String, index: true },\n    name : String,\n    date : Date\n  }],\n  recycled : Boolean\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoPopulateLead\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoPopulateLead:     \n\n                    \n                \n                    \n                        \n                            Default value : function(next) {\n  this.populate('user', 'username image')\n    .populate('media', 'title url content')\n    .populate('categories', 'title username content')\n  next();\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Schema\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Schema:     \n\n                    \n                \n                    \n                        \n                            Default value : mongoose.Schema\n                        \n                    \n\n\n            \n        \n\n    srv/models/task.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            autoPopulateLead\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoPopulateLead:     \n\n                    \n                \n                    \n                        \n                            Default value : function(next) {\n  this.populate('user', 'username image')\n    .populate('media', 'title url content')\n    .populate('categories', 'title username content')\n    .populate('comments.user', 'username image');\n  next();\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Schema\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Schema:     \n\n                    \n                \n                    \n                        \n                            Default value : mongoose.Schema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Task\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Task:     \n\n                    \n                \n                    \n                        \n                            Default value : mongoose.model('Task', taskSchema)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskSchema\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        taskSchema:     \n\n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  actions: Array,\n  categories:[{ type: Schema.ObjectId, ref: 'Category', required: true }],\n  color: Object,\n  comments: [{\n    user: { type: Schema.ObjectId, ref: 'User', required: true },\n    comment: { type: String, index: true },\n    name: String,\n    date: Date\n  }],\n  content: { type: String, index: true, required: true },\n  createdAt: Date,\n  draggable: Boolean,\n  end: Date,\n  media: { type: Schema.ObjectId, ref: 'Media' },\n  public: Boolean,\n  published: Boolean,\n  recycled: Boolean,\n  resizable: Object,\n  start: Date,\n  title: { type: String, index: true, required: true },\n  updated: [{\n  \tuser : { type: Schema.ObjectId, ref: 'User', required: true },\n  \tdate: Date\n  }],\n  user: { type: Schema.ObjectId, ref: 'User', required: true },\n})\n                        \n                    \n\n\n            \n        \n\n    srv/models/media.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            autoPopulateLead\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoPopulateLead:     \n\n                    \n                \n                    \n                        \n                            Default value : function(next) {\n  this.populate('user', 'username image')\n  next();\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Media\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Media:     \n\n                    \n                \n                    \n                        \n                            Default value : mongoose.model('Media', mediaSchema)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mediaSchema\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mediaSchema:     \n\n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  title: { type: String, index: true, required: true },\n  content: { type: String, index: true, required: true },\n  createdAt: Date,\n  public : Boolean,\n  url: String,\n  published: Boolean,\n  start : Date,\n  end : Date,\n  user: { type: Schema.ObjectId, ref: 'User', required: true },\n  updated: [{\n  \tuser : { type: Schema.ObjectId, ref: 'User' },\n  \tdate: Date\n  }],\n  recycled : Boolean\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Schema\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Schema:     \n\n                    \n                \n                    \n                        \n                            Default value : mongoose.Schema\n                        \n                    \n\n\n            \n        \n\n    srv/models/category.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            autoPopulateLead\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoPopulateLead:     \n\n                    \n                \n                    \n                        \n                            Default value : function(next) {\n  this.populate('user', 'username image')\n      .populate('media', 'title url content')    \n  next();\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Category\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Category:     \n\n                    \n                \n                    \n                        \n                            Default value : mongoose.model('Category', categorySchema)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categorySchema\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        categorySchema:     \n\n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  title: { type: String, index: true, required: true },\n  content: { type: String, index: true, required: true },\n  createdAt: Date,\n  public : Boolean,\n  published: Boolean,\n  start : Date,\n  end : Date,\n  media: { type: Schema.ObjectId, ref: 'Media' },\n  user: { type: Schema.ObjectId, ref: 'User', required: true },\n  updated: [{\n  \tuser : Object,\n  \tdate: Date\n  }],\n  comments: [{\n    user: Object,\n    comment: Object,\n    name : String,\n    date : Date\n  }],\n  recycled : Boolean\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Schema\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Schema:     \n\n                    \n                \n                    \n                        \n                            Default value : mongoose.Schema\n                        \n                    \n\n\n            \n        \n\n    srv/models/contact.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Contact\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Contact:     \n\n                    \n                \n                    \n                        \n                            Default value : mongoose.model('Contact', contactSchema)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contactSchema\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        contactSchema:     \n\n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  email: { type: String, index: true, required: true },\n  name: { type: String, index: true, required: true },\n  subject: { type: String, index: true, required: true },\n  text: { type: String, index: true, required: true },\n  createdAt: Date\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Schema\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Schema:     \n\n                    \n                \n                    \n                        \n                            Default value : mongoose.Schema\n                        \n                    \n\n\n            \n        \n\n    srv/router/router.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            storage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        storage:     multer.StorageEngine\n\n                    \n                \n                    \n                        \n                            Type :     multer.StorageEngine\n\n                        \n                    \n                    \n                        \n                            Default value : multer.diskStorage({\n\n  destination: (req, file, cb) => {\n    console.log(req.params.id)\n    if (!fs.existsSync(uploadsDir+'/'+req.params.id)){\n        fs.mkdirSync(uploadsDir+'/'+req.params.id);\n    }\n    cb(null, uploadsDir+'/'+req.params.id);\n  },\n  filename: (req, file, cb) => {\n    let ext = path.extname(file.originalname);\n    cb(null, `${Math.random().toString(36).substring(7)}${ext}`);\n  },\n  onFileUploadStart: function (file) {\n    console.log(file.originalname + ' is starting ...');\n  },\n  onFileUploadComplete: function (file) {\n    console.log(file.fieldname + ' uploaded to  ' + file.path);\n  }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        upload:     multer.Instance\n\n                    \n                \n                    \n                        \n                            Type :     multer.Instance\n\n                        \n                    \n                    \n                        \n                            Default value : multer({ storage: storage })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadsDir\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uploadsDir:     \n\n                    \n                \n                    \n                        \n                            Default value : path.resolve(__dirname, '../../../uploads')\n                        \n                    \n\n\n            \n        \n\n    srv/controllers/contact.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            transporter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        transporter:     \n\n                    \n                \n                    \n                        \n                            Default value : nodemailer.createTransport(\n    {\n        service: process.env.NODEMAILER_SERVICE,\n        host: process.env.ACCOUNT_SMTP_HOST,\n        port: Number(process.env.ACCOUNT_SMTP_PORT),\n        secure: Boolean(process.env.ACCOUNT_SMTP_SECURE),\n        auth: {\n            user: process.env.ACCOUNT_USER,\n            pass: process.env.ACCOUNT_PASS\n        },\n        logger: Boolean(process.env.TRANSPORTER_LOGGER),\n        debug: Boolean(process.env.TRANSPORTER_LOGGER) // include SMTP traffic in the logs\n    },\n    {\n        // default message fields\n        // sender info\n        from: process.env.NODEMAILER_FROM,\n        headers: {\n            'X-Laziness-level': 1000 // just an example header, no need to use this\n        }\n    }\n)\n                        \n                    \n\n\n            \n        \n\n    srv/controllers/media.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uploadsDir\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uploadsDir:     \n\n                    \n                \n                    \n                        \n                            Default value : path.resolve(__dirname, '../../../../uploads')\n                        \n                    \n\n\n            \n        \n\n    srv/models/user.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            User\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        User:     \n\n                    \n                \n                    \n                        \n                            Default value : mongoose.model('User', userSchema)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userSchema\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userSchema:     \n\n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  username: String,\n  email: { type: String, unique: true, lowercase: true, trim: true },\n  password: String,\n  media: String,\n  createdAt: Date,\n  role: String\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
